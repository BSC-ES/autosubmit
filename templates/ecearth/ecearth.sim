%ENVIRONMENT%

set -exuv
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
ECEARTH_DIR=%MODELS_DIR%/ecearth

#
# Model Configuration
#
VERSION=%VERSION%
MEMBER=%MEMBER%
EXPID=%EXPID%
START_date=%SDATE%
case $VERSION in
     v2.1)   ECEARTH=${ECEARTH_DIR}/v2.1
             SCRIPTDIR=${ECEARTH_DIR}/v2.1/setup
             TESTDATADIR=${ECEARTH_DIR}/v2.1/inidata/testdata
     ;;
     v2.2.0) ECEARTH=${ECEARTH_DIR}/v2.2.0
             SCRIPTDIR=${ECEARTH_DIR}/v2.2.0/setup
             TESTDATADIR=${ECEARTH_DIR}/v2.2.0/inidata/testdata
     ;;
     v2.2.1) ECEARTH=${ECEARTH_DIR}/v2.2.1
             SCRIPTDIR=${ECEARTH_DIR}/v2.2.1/setup
             TESTDATADIR=${ECEARTH_DIR}/v2.2.1/inidata/testdata
     ;;
     v2.2.2) ECEARTH=${ECEARTH_DIR}/v2.2.2
             SCRIPTDIR=${ECEARTH_DIR}/v2.2.2/setup
             TESTDATADIR=${ECEARTH_DIR}/v2.2.2/inidata/testdata
     ;;
     v2.2.3) ECEARTH=${ECEARTH_DIR}/v2.2.3
             SCRIPTDIR=${ECEARTH_DIR}/v2.2.3/setup
             TESTDATADIR=${ECEARTH_DIR}/v2.2.3/inidata/testdata
     ;;
     v2.3.0) ECEARTH=${ECEARTH_DIR}/v2.3.0
             SCRIPTDIR=${ECEARTH_DIR}/v2.3.0/setup
             TESTDATADIR=${ECEARTH_DIR}/v2.3.0/inidata/testdata
     ;;
esac

PATH=${SCRIPTDIR}:${PATH}
WRITINGDIR=${SCRATCH_DIR}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}
INIPATH=${RUN_dir}/inidata

mkdir -p $RUN_dir
cd $RUN_dir

#
# IFS
#
IFS_resolution=%IFS_resolution%
IFS_nproc=%IFS_nproc%
NPRTRVIFS=%NPRTRVIFS%
NPROMA=%NPROMA%
WAM=%WAM%
WAM=`echo $WAM | tr [:upper:] [:lower:]`
LLAST=TRUE
IFS_exe=${ECEARTH}/bin/ifsMASTER

#
# NEMO 
#
NEMO_resolution=%NEMO_resolution%
NEMO_config=`echo ${NEMO_resolution} | tr [a-z] [A-Z]`
NEMO_nprocX=%NEMO_nprocX%
NEMO_nprocY=%NEMO_nprocY%
NEMO_nproc=$((NEMO_nprocX*NEMO_nprocY))
case %ICE_ini% in
  'GLORYS2V1' ) NEMO_exe=${ECEARTH}/bin/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY}.GLORYS ;;
  *) NEMO_exe=${ECEARTH}/bin/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY} ;;
esac
SAVEDDO=%SAVEDDO%

#
# OASIS
#
OASIS3_oldWeights=true
OASIS3_weightsDir=${TESTDATADIR}/oasis3/weights/big_endian/${IFS_resolution}_${NEMO_resolution}
OASIS_nproc=%OASIS_nproc%
OASIS3_exe=${ECEARTH}/bin/oasis3.MPI1.x

#
# COMMON
#
export OASIS3=%OASIS3%
export OASIS3DEBUGLEVEL=2
export DR_HOOK_IGNORE_SIGNALS='-1'
export LOCAL_DEFINITION_TEMPLATES=${ECEARTH}/sources/ifs/src/emos/local_definitions
export MBX_SIZE=%MBX_SIZE%

CMIP5=%CMIP5%
Nrcp=%Nrcp%
RUN_coupFreq=%RUN_coupFreq% # Becomes NFRCO
NFRP=%NFRP% # Frequency of postprocessing in hours
ADVSCH=%ADVSCH% # Ocean advection scheme

#############
# Here we assume all initial conditions has been copied or linked to the RUN_dir
#############

#
# Chunk management
#
chunk=%CHUNK%
day_prev=%PREV%

# in days
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
RUN_days=%RUN_DAYS%
# in hours
Chunk_length=$(( ${RUN_days} * 24 )) # In hours
Chunk_last_day_prev=$(( ${day_prev} * 24 )) # In hours

#
# Run Directory Initialization
# 
if [[ $chunk == 1 ]] ; then
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_*.nc ${RUN_dir}/mask*.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "FIRST Chunk"
 echo "Chunk_length: ${Chunk_length}"
 LFASTRES=FALSE
else
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_zgr.nc ${RUN_dir}/mesh_hgr.nc ${RUN_dir}/mask.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "Chunk: ${chunk}"
 echo "Chunk_length: ${Chunk_length}"
 ln -sf IFS_Restart_$((chunk-1))/* .
 rm rcf; cp IFS_Restart_$((chunk-1))/rcf .
 ln -sf NEMO_Restart_$((chunk-1))/* .
 LFASTRES=TRUE
fi

#
# Control the use of the scenario
#
Lrcp=FALSE
if [[ $VERSION == "v2.3.0" || $VERSION == "v2.2.3" || $VERSION == "v2.2.2" ]] ; then
   yy=2005
else
   yy=1999
fi

if [[ `echo $Chunk_start_date | cut -c1-4` > $yy ]] ; then
   Lrcp=TRUE
fi

if [[ $Lrcp == TRUE ]] ; then
   CNrcp=$Nrcp
else
   CNrcp=0
fi
#

if [[ ! -a finished_chunk_${chunk} ]] ; then

 case $VERSION in
     v2.1)   EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -o .${Chunk_last}. -1 ${TESTDATADIR} -2 ${EXPID})
     ;;
     v2.2.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}.)
     ;;
     v2.2.1) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP})
     ;;
     v2.2.2) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${CMIP5}. -6 ${CNrcp})
     ;;
     v2.2.3) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${CMIP5}. -6 ${CNrcp})
     ;;
     v2.3.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${CMIP5}. -6 ${CNrcp})
     ;;
 esac

 if [[ ${OASIS3_oldWeights} == false ]] ; then
  ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -0 ${TESTDATADIR}
 else
  ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -w -W ${OASIS3_weightsDir} -0 ${TESTDATADIR}
 fi
#
 if [[ $VERSION == "v2.3.0" || $VERSION == "v2.2.3" || $VERSION == "v2.2.2" || $VERSION == "v2.2.1" || $VERSION == "v2.2.0" ]] ; then
       if [[ ${Chunk_last_day_prev} != '0' ]] ; then
          ${SCRIPTDIR}/setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH} -3 ${SAVEDDO}
       else
          ${SCRIPTDIR}/setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH} -3 ${SAVEDDO}
       fi
 else
       if [[ ${Chunk_last_day_prev} != '0' ]] ; then
          ${SCRIPTDIR}/setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date} -3 ${SAVEDDO}
       else
          ${SCRIPTDIR}/setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${CHunk_length} -0 ${TESTDATADIR} -1 ${START_date} -3 ${SAVEDDO}
       fi
 fi

 if [[ $chunk == 1 ]] ; then
  rm -f rcf
  rm -f *f00000000*
  rm -f postins 
  rm -f dirlist
  rm -f ICM*
  ln -sf ${INIPATH}/* .
 fi

 ls -l

#
# Location of the executables
# 
 IFS_exe="${IFS_exe}"
 NEMO_exe="${NEMO_exe}"
 OASIS3_exe="${OASIS3_exe}"

%PARALLEL_RUN_ECEARTH%

date
fi

#
# Check either simulation completed successfully or not
#
Chunk_end=$((Chunk_last_day_prev+Chunk_length))
Chunk_restart_tag=`printf "%06d0000" $((Chunk_end/24))`

ls -1 *${Chunk_restart_tag}*
if [[ $? == 0 ]]; then
   echo "finished chunk"
   touch finished_chunk_${chunk}
else
   echo "failed chunk"
   exit 1
fi

#
# Save NEMO & IFS restart files
#
mkdir -p NEMO_Restart_${chunk}

ldp=`printf '%08d' $Chunk_end`
mv *${ldp}* NEMO_Restart_${chunk}

ldp=`printf '%08d' ${Chunk_last_day_prev}`
rm -f *${ldp}*.nc restart_* ORCA1_Restart/*

mkdir -p IFS_Restart_${chunk}

mv *${Chunk_restart_tag}* \
   rcf IFS_Restart_${chunk}
rm -f srf* guarf* gxtrarf* surf* tmrf*

#
# Delete NEMO & IFS restart files (which has been stored correctly)
#

if [[ -a rest_$((chunk-2)) && -d NEMO_Restart_$((chunk-2)) ]] ; then
   rm -rf NEMO_Restart_$((chunk-2))
fi

if [[ -a rest_$((chunk-2)) && -d IFS_Restart_$((chunk-2)) ]] ; then
   rm -rf IFS_Restart_$((chunk-2))
fi

#
# Save NEMO & IFS output for postprocessing
#
output_dir=${RUN_dir}/Output_${chunk}
mkdir -p $output_dir

case ${SAVEDDO} in
  'TRUE') interval=1d ;;
  'FALSE') interval=MM ;;
esac

mv ORCA1_${interval}_*.nc ICMGG${EXPID}+* ICMSH${EXPID}+* $output_dir 

chmod 775 -R NEMO_Restart_${chunk} IFS_Restart_${chunk} $output_dir

touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date
