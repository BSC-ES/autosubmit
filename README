HOW TO USE
==========

cd src

- First Step:

python expid.py -h

python expid.py --new ecearth --HPC ithaca --description "experiment is about..."

Say for example, "chex" is 4 character based expid generated by system.
First character "c" will represent the platform such as "i" for ithaca, "b" for
BSC, "h" for HECToR and so on and rest of three characters "hex" will show a 
unique hexadecimal number.

- Second Step:

vi /cfu/autosubmit/chex/conf/expdef_chex.conf
vi /cfu/autosubmit/chex/conf/autosubmit_chex.conf

- Third Step:

python create_exp.py chex

- Fourth Step:

nohup python autosubmit.py chex >& chex_01.log &


HOW TO MONITOR
==============

The following procedure could be adopted to generate the plots for visualizing
the status of the experiment at any instance:

cd src

- First step:

python monitor.py -h

python monitor.py -e chex -j job_list -o pdf
or
python monitor.py -e chex -j job_list -o png

- Second step:

Here is below the location where user can find the generated plots with date and time
stamp:

/cfu/autosubmit/chex/plot/chex_date_time.pdf
or 
/cfu/autosubmit/chex/plot/chex_date_time.png

HOW TO RESTART
==============

cd src

- First step:

python recovery.py -h

python recovery.py -e chex --HPC ithaca

- Second step:

Here is below the location where user can find new pkl file:

/cfu/autosubmit/chex/pkl/new_job_list_chex.pkl

By following the instructions given in above section "HOW TO MONITOR", user can generate new plot
to verify the recovered stuff before restarting the autosubmit.

python monitor.py -e chex -j new_job_list -o pdf

- Third step:

cd /cfu/autosubmit/chex/pkl
mv new_job_list_chex.pkl job_list_chex.pkl
rm failed_job_list_chex.pkl

- Fourth step:

nohup python autosubmit.py chex >& chex_02.log &
