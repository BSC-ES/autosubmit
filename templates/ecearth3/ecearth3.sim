%ENVIRONMENT%

set -xuve
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
ECEARTH_DIR=%MODELS_DIR%/%MODEL%
PATH=%GRIBAPIPATH2%:${PATH}

#
# Model Configuration
#
VERSION=%VERSION%
MEMBER=%MEMBER%
EXPID=%EXPID%
START_date=%SDATE%

ECEARTH=${ECEARTH_DIR}/$VERSION
ini_data_dir=${ECEARTH}/inidata

WRITINGDIR=${SCRATCH_DIR}/%HPCUSER%/${EXPID}
BINPATH=${WRITINGDIR}/model/bin
ctrl_file_dir=${WRITINGDIR}/model/setup/ctrl
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}
cd $RUN_dir

#
# IFS
#
ifs_grid=%IFS_resolution%
ifs_grid_wol=`echo ${ifs_grid} | cut -d 'L' -f 1` # without level (wol)
ifs_numproc=%IFS_nproc%
nprtrv=%NPRTRVIFS%
ifs_exe_file=${BINPATH}/ifsmaster-ecconf
nfrp=%NFRP%
case ${ifs_grid_wol} in
     T159) ifs_time_step_sec=3600 ;;
     T255) ifs_time_step_sec=2700 ;;
     T799) ifs_time_step_sec=720  ;;
     *) echo "Unsupported grid type: ${ifs_grid_wol}" ;;
esac
ifs_output_freq=$(( nfrp * 3600 / ifs_time_step_sec ))
ifs_di_freq=$(( 24 * 3600 / ifs_time_step_sec ))
ifs_ddh_freq=$(( 120 * 3600 / ifs_time_step_sec ))
ifs_lastout=true
ifs_res_hor=$(echo ${ifs_grid} | sed 's:T\([0-9]*\)L\([0-9]*\):\1:')
ifs_res_ver=$(echo ${ifs_grid} | sed 's:T\([0-9]*\)L\([0-9]*\):\2:')
ifs_cmip5=%CMIP5%
ifs_cmip5_rcp=0
ifs_volcanoes=FALSE
ifs_leco2var=FALSE
ifs_nhincsol=0
ifs_ncmip5fixyr=0
if [[ $ifs_cmip5 == TRUE ]]; then
   ifs_cmip5_rcp=%Nrcp%
   ifs_volcanoes=TRUE
   ifs_leco2var=TRUE
   ifs_nhincsol=%NHINCSOL%
   ifs_ncmip5fixyr=%NFIXYR%
fi

#
# NEMO 
#
OCEAN_ini=%OCEAN_ini%
nem_grid=%NEMO_resolution%
nem_grid_wol=`echo ${nem_grid} | cut -d 'L' -f 1` # without level (wol)
LIM=%LIM%
nem_numproc=%NEMO_nproc%
nem_exe_file=${BINPATH}/${nem_grid}_${LIM}/nemo.exe
case ${nem_grid_wol} in
     ORCA1)   nem_time_step_sec=3600 ;;
     ORCA025) nem_time_step_sec=1200 ;;
     *) echo "Unsupported grid type: ${nem_grid_wol}" ;;
esac
lim_time_step_sec=3600
advsch=%ADVSCH%
nem_res_hor=$(echo ${nem_grid} | sed 's:ORCA\([0-9]*\)L\([0-9]*\):\1:')
nem_res_ver=$(echo ${nem_grid} | sed 's:ORCA\([0-9]*\)L\([0-9]*\):\2:')

#
# OASIS
#
oas_numproc=%OASIS_nproc%
oas_exe_file=${BINPATH}/oasis3.MPI1.x
# Restart files for the coupling fields
oas_cpl_flds="TAUX_OCE TAUY_OCE TAUX_ICE TAUY_ICE \
              QS___OCE QS___ICE QNS__OCE QNS__ICE DQDT_ICE \
              PRCP_LIQ PRCP_SOL EVAP_TOT EVAP_ICE RNF__OCE CALV_OCE \
              O_SSTSST O_TepIce O_AlbIce OIceFrac O_IceTck O_SnwTck"
oas_namcut_script=${ECEARTH}/sources/util/namcouple-split/namsplit.pl
oas_rnf_fluxcorr=0.87

#
# COMMON
#
exp_name=$EXPID
cpl_freq_hrs=%RUN_coupFreq%
export OASIS3=%OASIS3%
export OASIS3DEBUGLEVEL=2
export DR_HOOK_IGNORE_SIGNALS='-1'
export GRIB_DEFINITION_PATH=%GRIBAPIPATH2_DEF%
export GRIB_SAMPLES_PATH=%GRIBAPIPATH2_SAM%
export GRIB_BIN_PATH=%GRIBAPIPATH2%

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
Chunk_last=%Chunk_LAST%
leg_start_date_yyyymmdd=$Chunk_start_date
leg_start_date_yyyy=`echo $Chunk_start_date | cut -c1-4`
leg_end_date_yyyy=`echo $Chunk_end_date | cut -c1-4`
# In months
RUN_months=%CHUNKSIZE%
# In days
RUN_days=%RUN_DAYS%
# In hours
RUN_hours=$((RUN_days*24))
# Last Day Previous
day_prev=%PREV%
Chunk_last_day_prev=$((day_prev*24))
Chunk_end=$((Chunk_last_day_prev+RUN_hours))
# In seconds
leg_length_sec=$((RUN_hours*3600))
leg_start_sec=$((Chunk_last_day_prev*3600))
leg_end_sec=$((Chunk_end*3600))
# restart tags
Chunk_nem_restart_tag=$(printf %08d $(( leg_end_sec / nem_time_step_sec )))
Chunk_ifs_restart_tag=$(printf %06d0000 $(( Chunk_end / 24 )))

#
# Run Directory Initialization
# 
if [[ $chunk == 1 ]]; then
   echo "FIRST Chunk"
   echo "Chunk_length: ${RUN_hours}"
   leg_is_restart=false
   rm -f ${RUN_dir}/anaisout_*
   if [[ $OCEAN_ini != '' ]]; then
      rstctl=0
   else
      rstctl=1
   fi
else
   echo "Chunk: ${chunk}"
   echo "Chunk_length: ${RUN_hours}"
   leg_is_restart=true
   rm -f ${RUN_dir}/anaisout_*
   if [[ $OCEAN_ini != '' ]]; then
      rstctl=2
   else
      rstctl=1
   fi
   for f in ${oas_cpl_flds}; do
       rm -f $f; cp OASIS_Restart_$((chunk-1))/$f .
   done
   ln -sf IFS_Restart_$((chunk-1))/* .
   rm -f rcf; cp IFS_Restart_$((chunk-1))/rcf .
   ns=$(printf %08d $(( leg_start_sec / nem_time_step_sec )))
   for n in $(seq 0 $((nem_numproc-1))); do
       np=$(printf %04d ${n})
       ln -sf NEMO_Restart_$((chunk-1))/${EXPID}_${ns}_restart_oce_${np}.nc restart_oce_${np}.nc
       ln -sf NEMO_Restart_$((chunk-1))/${EXPID}_${ns}_restart_ice_${np}.nc restart_ice_${np}.nc
   done
fi

#
# Control the use of the scenario
#
if [[ `echo $Chunk_start_date | cut -c1-4` < 2006 ]] ; then
   ifs_cmip5_rcp=0
fi
#

if [[ ! -a finished_chunk_${chunk} ]]; then

 rm -rf OASIS_Restart_${chunk}
 rm -rf NEMO_Restart_${chunk} *${Chunk_nem_restart_tag}*
 rm -rf IFS_Restart_${chunk} *${Chunk_ifs_restart_tag}*
 rm -rf Output_${chunk}
 rm -f rest_${chunk} out_${chunk}
 if [[ -a ocean.output ]]; then
    mv ocean.output ocean.output.$((chunk-1)).$$
 fi
 if [[ -a NODE.001_01 ]]; then
    mv NODE.001_01 NODE.001_01.$((chunk-1)).$$
 fi

#
# Create some control files
#

# IOM files
ln -sf ${ctrl_file_dir}/xmlio_server.def
ln -sf ${ctrl_file_dir}/iodef.$(echo $LIM | tr [:upper:] [:lower:]).xml iodef.xml

# IFS, NEMO, LIM namelist and OASIS namcouple files
. ${ctrl_file_dir}/namelist.ifs-${ifs_grid}.sh                                       > fort.4
. ${ctrl_file_dir}/namelist.nemo-${nem_grid}.sh                                      > namelist
. ${ctrl_file_dir}/namelist.$(echo $LIM | tr [:upper:] [:lower:])-${nem_grid_wol}.sh > namelist_ice
. ${ctrl_file_dir}/namcouple.sh                                                      > namcouple

# Split OASIS namcouple file (if necessary)
if (( oas_numproc == 1 ))
then
    ln -sf namcouple namcouple_0
elif [ -n "$oas_namcut_script" -a -x $oas_namcut_script ]
then
    ${oas_namcut_script} ${oas_numproc} namcouple
else
    echo "Couldn't run script to split the OASIS namcouple file (\$oas_namcut_script)."
fi

#
# IFS climatology data
#
icmclfile=${ini_data_dir}/ifs/${ifs_grid}/climate/ICMCL
tempfile=tmp.$$

# Create data for december, the year before the leg starts
grib_set \
-s dataDate=$(printf "%04d" $((leg_start_date_yyyy-1)))1215 ${icmclfile}-12 \
                                                       ICMCL${exp_name}INIT

# Create data for all month in the years of the leg
for y in $(seq ${leg_start_date_yyyy} ${leg_end_date_yyyy})
do
    yy=$(printf "%04d" $y)
    for m in $(seq 1 12)
    do
        mm=$(printf "%02d" $m)
        grib_set -s dataDate=${yy}${mm}15 ${icmclfile}-${mm} ${tempfile}
        cat ${tempfile} >> ICMCL${exp_name}INIT
    done
done

# Create data for january, the year after the leg ends
grib_set -s dataDate=$(printf "%04d" $((leg_end_date_yyyy+1)))0115 ${icmclfile}-01 \
                                                                          ${tempfile}
cat ${tempfile} >> ICMCL${exp_name}INIT

# Clean up
rm -f ${tempfile}

#
# Location of the executables
# 
 ln -sf ${ifs_exe_file}
 ln -sf ${nem_exe_file}
 ln -sf ${oas_exe_file}

#
# Model Run
#
 ls -l
 date
%PARALLEL_RUN_ECEARTH3%

 date
fi

#
# Check either simulation completed successfully or not
#
ls -1 *${Chunk_ifs_restart_tag}*
if [[ $? == 0 ]]; then
   echo "finished chunk"
   touch finished_chunk_${chunk}
else
   echo "failed chunk"
   exit 1
fi

#
# Save OASIS, NEMO and IFS restart files
#
mkdir -p OASIS_Restart_${chunk}
for f in ${oas_cpl_flds}; do
    mv $f OASIS_Restart_${chunk}
done

mkdir -p IFS_Restart_${chunk}
mv *${Chunk_ifs_restart_tag}* \
   rcf IFS_Restart_${chunk}
rm -f srf*

mkdir -p NEMO_Restart_${chunk}
mv *${Chunk_nem_restart_tag}* NEMO_Restart_${chunk}
rm -f restart_*

#
# Delete OASIS, IFS and NEMO restart files (which has been stored correctly)
#
if [[ -a rest_$((chunk-2)) && -d OASIS_Restart_$((chunk-2)) ]]; then
 rm -rf OASIS_Restart_$((chunk-2))
fi

if [[ -a rest_$((chunk-2)) && -d IFS_Restart_$((chunk-2)) ]]; then
 rm -rf IFS_Restart_$((chunk-2))
fi

if [[ -a rest_$((chunk-2)) && -d NEMO_Restart_$((chunk-2)) ]]; then
   rm -rf NEMO_Restart_$((chunk-2))
fi

#
# Save IFS & NEMO output for postprocessing
#
mkdir -p Output_${chunk}
mv ICMGG${EXPID}+* ICMSH${EXPID}+* Output_${chunk}
mv ${EXPID}_??_*.nc Output_${chunk}

touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date

