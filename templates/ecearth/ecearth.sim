%ENVCOM%
set -xuve
date

#
# General Paths
#
MODEL_DIR=%MODELS_DIR%/%MODEL%
SCRATCH_DIR=%SCRATCH_DIR%/%HPCPROJ%/%HPCUSER%
SCRATCH_TMP_DIR=%SCRATCH_TMP_DIR%/%HPCUSER%/%JOBNAME%
HSM_DIR=%HSM_DIR%

#
# Model Configuration
#
EXPID=%EXPID%
VERSION=%VERSION%
MEMBER=%MEMBER%
START_date=%SDATE%
START_date_1=%DAY_BEFORE%

ECEARTH=${MODEL_DIR}/$VERSION
TESTDATADIR=${ECEARTH}/inidata/testdata

WRITINGDIR=${SCRATCH_DIR}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}

BINPATH=${WRITINGDIR}/model/bin
SCRIPTDIR=${WRITINGDIR}/model/setup

cd $RUN_dir

#
# IFS
#
IFS_resolution=%IFS_resolution%
IFS_nproc=%IFS_nproc%
NPRTRVIFS=%NPRTRVIFS%
NPROMA=40 # No need to change this
WAM=false # No need to change this
LCMIP5=%LCMIP5%
NRCP=%NRCP% # RCP value
NFRP=%NFRP% # Postprocessing frequency (in hours)
LLAST=TRUE
NFIXYR=%NFIXYR%
NHINCSOL=1 # Needed for constant solar irradiance experiments then set 0
IFS_exe=${BINPATH}/ifsMASTER

#
# NEMO 
#
NEMO_resolution=%NEMO_resolution%
NEMO_config=$NEMO_resolution
NEMO_resolution=`echo ${NEMO_resolution} | tr [A-Z] [a-z]`
ADVSCH=%ADVSCH% # Ocean advection scheme
AHI0=350.e0 # horizontal eddy diffusivity coefficient for sea-ice (m2/s)
NEMO_nprocX=%NEMO_nprocX%
NEMO_nprocY=%NEMO_nprocY%
NEMO_nproc=$((NEMO_nprocX*NEMO_nprocY))
NEMO_exe=${BINPATH}/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY}
ICE_ini=%ICE_ini%
if [[ $ICE_ini != '' ]]; then
   case $ICE_ini in
    'GLORYS2V1' ) NEMO_exe=${BINPATH}/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY}.GLORYS ;;
   esac
fi
SAVEDDO=%SAVEDDO%
GRESFILE=false # Handling global restart for NEMO

#
# OASIS
#
OASIS3_oldWeights=true
OASIS3_weightsDir=${TESTDATADIR}/oasis3/weights/big_endian/${IFS_resolution}_${NEMO_resolution}
OASIS_nproc=%OASIS_nproc%
OASIS3_exe=${BINPATH}/oasis3.MPI1.x

#
# COMMON
#
RUN_coupFreq=%RUN_coupFreq% # Becomes NFRCO
export OASIS3=%OASIS3%
export OASIS3DEBUGLEVEL=2
export DR_HOOK_IGNORE_SIGNALS='-1'
export LOCAL_DEFINITION_TEMPLATES=${ECEARTH}/sources/ifs/src/emos/local_definitions
export MBX_SIZE=512000000 # No need to change this

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
Chunk_last=%Chunk_LAST%
# In months
RUN_months=%CHUNKSIZE%
# In days
RUN_days=%RUN_DAYS%
# In hours
RUN_hours=$((RUN_days*24))
# Last Day Previous
day_prev=%PREV%
MODEL_rstini=%MODEL_rstini%
if [[ $MODEL_rstini != '' ]]; then
   day_prev_rst=$(cat day_prev_rst)
   day_prev=$((day_prev_rst+day_prev))
   if [[ $chunk == 1 ]]; then
      GRESFILE=true
   fi
fi
Chunk_last_day_prev=$((day_prev*24))
Chunk_end=$((Chunk_last_day_prev+RUN_hours))
# restart tags
Chunk_nem_restart_tag=$(printf %08d ${Chunk_end})
Chunk_ifs_restart_tag=$(printf %06d0000 $(( Chunk_end / 24 )))

#
# Run Directory Initialization
# 
if [[ $chunk == 1 ]]; then
   echo "FIRST Chunk"
   echo "Chunk_length: ${RUN_hours}"
   LFASTRES=FALSE
   rm -f ${RUN_dir}/anaisout
   rm -f ${RUN_dir}/mesh_*.nc ${RUN_dir}/mask*.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc

   # Files needed for common use from local inidata and local setup
   ln -sf $TESTDATADIR/ifs/$IFS_resolution/* .
   rm -f rcf *f00000000* ICM*
   rm -f postins dirlist
   ln -sf $TESTDATADIR/nemo/$NEMO_config/* .
   rm -f *restart*

   ln -sf $SCRIPTDIR/postins .
   ln -sf $SCRIPTDIR/dirlist .
   ln -sf inidata/* .
   if [[ -a inidata/rcf ]]; then
      rm -f rcf; cp inidata/rcf .
   fi
else
   echo "Chunk: ${chunk}"
   echo "Chunk_length: ${RUN_hours}"
   LFASTRES=TRUE
   rm -f ${RUN_dir}/anaisout
   rm -f ${RUN_dir}/mesh_zgr.nc ${RUN_dir}/mesh_hgr.nc ${RUN_dir}/mask.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
   ln -sf IFS_Restart_$((chunk-1))/* .
   rm -f rcf; cp IFS_Restart_$((chunk-1))/rcf .
   ln -sf NEMO_Restart_$((chunk-1))/* .
fi

#
# Control the use of the scenario
#
if [[ $VERSION == "v2.3.0" || $VERSION == "v2.2.3" || $VERSION == "v2.2.2" ]] ; then
   yy=2006
else
   yy=2000
fi
if [[ $(echo $Chunk_start_date | cut -c1-4) < $yy ]] ; then
   NRCP=0
fi
#

#
# Final condition, before starting simulation
#
if [[ ! -a finished_chunk_${chunk} ]]; then

 rm -rf NEMO_Restart_${chunk} *${Chunk_nem_restart_tag}*
 rm -rf IFS_Restart_${chunk} *${Chunk_ifs_restart_tag}*

 # setupifs.ksh
 case $VERSION in
     v2.1)   EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -o .${Chunk_last}. -1 ${TESTDATADIR} -2 ${EXPID})
     ;;
     v2.2.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}.)
     ;;
     v2.2.1) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP})
     ;;
     v2.2.2) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${LCMIP5}. -6 ${NRCP})
     ;;
     v2.2.3) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${LCMIP5}. -6 ${NRCP})
     ;;
     v2.3.0) EXPVER=$(${SCRIPTDIR}/setupifs2.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${LCMIP5}. -6 ${NRCP} -7 ${NFIXYR} -8 ${NHINCSOL})
     ;;
 esac

 # setupoasis.ksh
 if [[ ${OASIS3_oldWeights} == false ]] ; then
    ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${RUN_hours} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -0 ${TESTDATADIR}
 else
    ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${RUN_hours} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -w -W ${OASIS3_weightsDir} -0 ${TESTDATADIR}
 fi

 # setupnemo.ksh
 if [[ $VERSION == "v2.3.0" || $VERSION == "v2.2.3" || $VERSION == "v2.2.2" || $VERSION == "v2.2.1" || $VERSION == "v2.2.0" ]] ; then
    if [[ ${Chunk_last_day_prev} != '0' ]] ; then
       ${SCRIPTDIR}/setupnemo2.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_last_day_prev+RUN_hours)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH} -3 ${SAVEDDO} -4 .${GRESFILE}. -5 ${AHI0}
    else
       ${SCRIPTDIR}/setupnemo2.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${RUN_hours} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH} -3 ${SAVEDDO} -4 .${GRESFILE}. -5 ${AHI0}
    fi
 else
    if [[ ${Chunk_last_day_prev} != '0' ]]; then
       ${SCRIPTDIR}/setupnemo2.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_last_day_prev+RUN_hours)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date} -3 ${SAVEDDO} -4 .${GRESFILE}. -5 ${AHI0}
    else
       ${SCRIPTDIR}/setupnemo2.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${CHunk_length} -0 ${TESTDATADIR} -1 ${START_date} -3 ${SAVEDDO} -4 .${GRESFILE}. -5 ${AHI0}
    fi
 fi

 # Location of the executables
 IFS_exe="${IFS_exe}"
 NEMO_exe="${NEMO_exe}"
 OASIS3_exe="${OASIS3_exe}"

 # Model Run
 ls -l
 date
%ENVPARA%
%RUNPARAECE%

 date
 ls -l
fi

#
# Check either simulation completed successfully or not
#
ls -1 *${Chunk_ifs_restart_tag}*
if [[ $? -ne 0 ]]; then
   echo "failed chunk"
   exit 1
fi
echo "finished chunk"
touch finished_chunk_${chunk}

#
# Save IFS & NEMO restart files
#
mkdir -p IFS_Restart_${chunk}
mv *${Chunk_ifs_restart_tag}* \
   rcf IFS_Restart_${chunk}
rm -f srf* guarf* gxtrarf* surf* tmrf*

mkdir -p NEMO_Restart_${chunk}
mv *${Chunk_nem_restart_tag}* NEMO_Restart_${chunk}
ldp=$(printf %08d ${Chunk_last_day_prev})
rm -f *${ldp}*.nc restart_* ORCA1_Restart/*

#
# Delete IFS & NEMO restart files (which has been stored correctly)
#
if [[ -a rest_$((chunk-2)) && -d IFS_Restart_$((chunk-2)) ]]; then
 rm -rf IFS_Restart_$((chunk-2))
fi

if [[ -a rest_$((chunk-2)) && -d NEMO_Restart_$((chunk-2)) ]]; then
   rm -rf NEMO_Restart_$((chunk-2))
fi

#
# Save IFS & NEMO output for postprocessing
#
mkdir -p Output_${chunk}
mv ICMGG${EXPID}+* ICMSH${EXPID}+* Output_${chunk}
mv ORCA1_??_*.nc Output_${chunk}

touch %SCRATCH_DIR%/%HPCPROJ%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date

