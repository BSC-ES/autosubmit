date

#
# General Paths and Configurations
#
dst1=/cfunas/exp/%MODEL% # store logfiles, MM*, REST*
dst2=/cfunas/exp/ecearth/gribfiles # store ICM*
arch=%HPCARCH%
proj=%HPCPROJ%

types="logfiles diags MM restart REST ICM"
expid=%EXPID%
sdates=%SDATE%
members=%MEMBER%
hsm_dir=%HSM_DIR%

# remove output from source
remove=TRUE

# HPC Arch
case $arch in
 lindgren)
  arch="cfs-aux-4"
 ;;
 marenostrum3)
  arch="mn-dt-${proj}"
 ;;
esac

#
# User Defined Funtions
#
function transfer1(){
 dst=$1/$expid/$s/$m/$2
 if [[ $remove == TRUE ]]; then
  RSYNC="rsync -acv --remove-sent-files"
 else
  RSYNC="rsync -acv"
 fi
 for l in $list; do
  echo "tranfering file ... ${arch}:$l $dst"
  $RSYNC ${arch}:${l} $dst
  echo "done."
  echo
  echo
 done
}

function transfer2(){
 dst=$1/$expid/$s/$m/$2
 for l in $list; do
  echo "tranfering file ... $src/$expid/$s/$m/$2/$l $dst/$l"
  ecaccess-file-get $src/$expid/$s/$m/$2/$l $dst/$l
  if [[ $? -eq 0 && $remove == TRUE ]]; then
   ecaccess-file-delete -force $src/$expid/$s/$m/$2/$l
  fi
  echo "done."
  echo
  echo
 done
}

#
# Major Part of the Script
#
echo "platform is: $arch"
echo "expid is: $expid"
echo "start dates: $sdates"
echo "members per start date: $members"

for s in $sdates; do
 for m in $members; do

  rmtlist="ssh $arch ls -1"
  transfer="transfer1"
  src=$hsm_dir/exp

  case $arch in
   ecmwf)
    export EcaccessWebtoolkitJava=/cfu/software/ecaccess-java
    export PATH=$EcaccessWebtoolkitJava/bin:${PATH}
    rmtlist="ecaccess-file-dir"
    transfer="transfer2"
   ;;
  esac

  for typ in $types; do
   case $typ in
    logfiles)
     lswc=`$rmtlist $src/$expid/$s/$m/logfiles* | wc -l`
     if [[ $lswc -gt 0 ]]; then
      mkdir -p $dst1/$expid/$s/$m
      list=`$rmtlist $src/$expid/$s/$m/logfiles*`
      $transfer $dst1 ""
     fi
    ;;
    MM|diags)
     lswc=`$rmtlist $src/$expid/$s/$m/outputs/${typ}* | wc -l`
     if [[ $lswc -gt 0 ]]; then
      mkdir -p $dst1/$expid/$s/$m/outputs
      list=`$rmtlist $src/$expid/$s/$m/outputs/${typ}*`
      $transfer $dst1 outputs
     fi
    ;;
    REST|restart)
     lswc=`$rmtlist $src/$expid/$s/$m/restarts/${typ}* | wc -l`
     if [[ $lswc -gt 0 ]]; then
      mkdir -p $dst1/$expid/$s/$m/restarts
      list=`$rmtlist $src/$expid/$s/$m/restarts/${typ}*`
      $transfer $dst1 restarts
     fi
    ;;
    ICM)
     lswc=`$rmtlist $src/$expid/$s/$m/outputs/ICM* | wc -l`
     if [[ $lswc -gt 0 ]]; then
      mkdir -p $dst2/$expid/$s/$m/outputs
      list=`$rmtlist $src/$expid/$s/$m/outputs/ICM*`
      $transfer $dst2 outputs
     fi
    ;;
    *)
     echo "$typ is not a valid data type"
    ;;
   esac
  done

 done
done

touch /cfu/autosubmit/%EXPID%/tmp/LOG_%EXPID%/%JOBNAME%_COMPLETED

date

