#!/usr/bin/env python

# Copyright 2015 Earth Sciences Department, BSC-CNS

# This file is part of Autosubmit.

# Autosubmit is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Autosubmit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Autosubmit.  If not, see <http://www.gnu.org/licenses/>.

"""Script for handling experiment monitoring"""
import os
import sys

from log.log import Log,AutosubmitError,AutosubmitCritical

scriptdir = os.path.abspath(os.path.dirname(sys.argv[0]))
assert sys.path[0] == scriptdir
sys.path[0] = os.path.normpath(os.path.join(scriptdir, os.pardir))

# noinspection PyUnresolvedReferences
from autosubmit.autosubmit import Autosubmit



# noinspection PyProtectedMember
def main():
    try:
        Autosubmit.parse_args()
        os._exit(0)
    except AutosubmitCritical as e:
        if e.trace is not None:
            Log.error("Trace: {0}", e.trace)
        Log.critical("{1} [eCode={0}]", e.code, e.message)
        os._exit(1)
    except Exception as e:
        Log.error("Trace: {0}", e.message)
        if "temporarily unavailable" in str(e.message):
            Log.critical("Another instance of autosubmit is running on this experiment. If this is not the case, delete autosubmit.lock",7000)
        else:
            Log.critical("Unhandled error, if you see this message report it in autosubmit git")
        os._exit(1)

if __name__ == "__main__":
    main()

