set -exuv
date
#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
HSMdir=%HSM_DIR%
DBdir=%DB_DIR%
NCPATH="%NCPATH%"
#
# Model Configuration
#
EXPID=%EXPID%
MEMBER=%MEMBER%
START_date=%SDATE%
WRITINGDIR=${SCRATCH_DIR}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${MEMBER}
PATHOUT="${HSMdir}/exp/${EXPID}/${MEMBER}"
PATHFORC=${HSMdir}/fg/ocean
PATHNUDG=${HSMdir}/nudging/%OCEAN_NUDDATA%/${MEMBER}
#
# Chunk management
#
chunk=%CHUNK%
Chunk_last=%Chunk_LAST%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
RUN_year=`echo ${Chunk_start_date} | cut -c1-4`
Chunk_start_month=`echo ${Chunk_start_date} | cut -c5-6`
if [[ %OCEAN_FORCYEAR% == -1 && %OCEAN_FORCTYPE% == 'ERA-INTERIM-ORCA1' ]] ; then
  RUN_days=%RUN_DAYS%
  day_prev=%PREV%
else
  Chunk_length_month=$((${Chunk_end_month}-${Chunk_start_month}+1))
  case ${Chunk_length_month} in
    6)
    case ${Chunk_start_month} in
      01) RUN_days=181
      day_prev=$(( ( (chunk-1) / 2 ) * 365 ))
      ;;
      06) RUN_days=184
      day_prev=$(( ( (chunk-1) / 2 ) * 365 + 181 ))
      ;;
    esac
    ;;
    12) RUN_days=365
    day_prev=$(( (chunk-1) * 365 ))
    ;;
  esac
fi
Chunk_length=$(( ${RUN_days} * 24 )) # In hours
Chunk_last_day_prev=$(( ${day_prev} * 24 )) # In hours
#
###############################################################################
#                               SAVE RESTARTS                                 # 
###############################################################################
#
cd $RUN_dir/NEMO_Restart_${chunk}
#
PATHOUT_RES="${PATHOUT}/restarts"
mkdir -p ${PATHOUT_RES}               # Where the restarts are to be stored
#
Basedir="${RUN_dir}/NEMO_Restart_${chunk}"
listfile=""
if [[ -d ${Basedir} ]] ; then
  listfile=`ls ORCA1_*_restart*`
else
  exit 1
fi                                    # Which restarts to store
#
tarfile="restart_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"
tar -cvf $tarfile ${listfile}
cp $tarfile $PATHOUT_RES              # Store
#
locfile=`md5sum ${tarfile}|cut -d" " -f1`              
remfile=`md5sum ${PATHOUT_RES}/${tarfile}|cut -d" " -f1`
rm -f ${RUN_dir}/rest_${chunk}
if [[ "$locfile" == "$remfile" ]] ; then
  echo "The file has been correctly stored"
  touch ${RUN_dir}/rest_${chunk}
  rm -f $tarfile
else
  exit 1
fi                                     # Check if the storage is ok before rm
#
###############################################################################
#                               SAVE OUTPUTS                                  #
###############################################################################
#
PATHOUT_OUT="${PATHOUT}/outputs"
mkdir -p ${PATHOUT_OUT}                # Where the outputs are to be stored
#
output_dir=${RUN_dir}/Output_${chunk}
if [[ -d ${output_dir} ]] ; then
  cd ${output_dir}
  if [[ %OCEAN_REDUCOUT% == 'TRUE' ]] ; then
    listfile2=`ls sstsimld*.nc ice*.nc t3d*.nc sal*.nc heat*.nc moc*.nc psi*.nc `
  else
    listfile2=`ls *grid_T.nc *grid_V.nc *grid_U.nc *grid_W.nc *icemod.nc`
  fi
else
  exit 1
fi                                   
#
tarfile="diags_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"
tar -cvf $tarfile ${listfile2}
cp $tarfile $PATHOUT_OUT              # Store
#
locfile=`md5sum ${tarfile}|cut -d" " -f1`
remfile=`md5sum ${PATHOUT_OUT}/${tarfile}|cut -d" " -f1`
rm -f ${RUN_dir}/outo_${chunk}
if [[ "$locfile" == "$remfile" ]] ; then
  echo "The file has been correctly stored"
  touch ${RUN_dir}/outo_${chunk}
  rm -f ../$tarfile
else
  exit 1
fi                                    # Check if the storage is ok before rm
#
################################################################################
#                            PREPARE NEXT FORCINGS                             #
################################################################################
#
cd ${RUN_dir}
#
case %OCEAN_FORCTYPE% in
  'ERAINTERIM-ORCA1') PATHFORC=${PATHFORC}/ERAINTERIM ; type=ERAINTERIM-ORCA1 ;;
  'DFS4.3') PATHFORC=${PATHFORC}/DFS4.3 ; type=DFS4.3 ;;
esac

if [[ %OCEAN_FORCYEAR% == -1 ]]; then
  FORCING_YEAR=$RUN_year
else
  FORCING_YEAR=%OCEAN_FORCYEAR%
fi

listvars=( q2 qlw qsw t2 u10 v10 snow precip )

if [ %OCEAN_FORCYEAR% == -1 ] ; then
  for var in ${listvars[@]} ; do
    if [[ -e ${var}_core_y$((RUN_year-2)).nc ]] ; then
      rm -f ${var}_core_y$((RUN_year-2)).nc
    fi
    if [[ -e ${PATHFORC}/${var}_${type}_$((FORCING_YEAR+3)).nc ]] ; then
      cp ${PATHFORC}/${var}_${type}_$((FORCING_YEAR+3)).nc ${var}_core_y$((RUN_year+3)).nc
    else
      cp ${var}_core_y$((RUN_YEAR+2)).nc ${var}_core_y$((RUN_year+3)).nc
    fi
  done
fi
#
################################################################################
#                          PREPARE NEXT NUDGING FILES                          #
################################################################################
#
if [[ %OCEAN_NUDGING% == 'TRUE' ]] ; then

  case ${Chunk_start_month} in
    1)
    ${NCPATH}/ncks -d 10,12 nudg_chunk$((chunk+1)).nc nudg_chunk$((chunk+2))_10-12.nc
    ${NCPATH}/ncks -d 1,3 nudg_chunk$((chunk+1)).nc nudg_chunk$((chunk+2))_1-3.nc
    for ((mon=4;mon<=9;mon++)) ; do
      if [[ -e ${PATHNUDG}/%OCEAN_NUDDATA%_1m_$((RUN_year+1))0${mon}_grid_T_02.nc.gz ]] ; then
        cp ${PATHNUDG}/%OCEAN_NUDDATA%_1m_$((RUN_year+1))0$mon_grid_T_02.nc.gz nudg_chunk$((chunk+2))_0$mon.nc.gz
        gunzip nudg_chunk$((chunk+2))_0$mon.nc.gz
      else
        ${NCPATH}/ncks -d time,$mon nudg_chunk$((chunk+1)).nc nudg_chunk$((chunk+2))_0$mon.nc
      fi
    done
    ${NCPATH}/ncrcat -n 6,2,1 nudg_chunk$((chunk+2))_04.nc nudg_chunk$((chunk+2))_4-9.nc
    ;;
    6)
    ${NCPATH}/ncks -d 4,9 nudg_chunk$((chunk+1)).nc nudg_chunk$((chunk+2))_4-9.nc
    for ((mon=10;mon<=12;mon++)) ; do
      if [[ -e ${PATHNUDG}/%OCEAN_NUDDATA%_1m_$((RUN_year+1))${mon}_grid_T_02.nc.gz ]] ; then
        cp ${PATHNUDG}/%OCEAN_NUDDATA%_1m_$((RUN_year+1))$mon_grid_T_02.nc.gz nudg_chunk$((chunk+2))_$mon.nc.gz
        gunzip nudg_chunk$((chunk+2))_$mon.nc.gz
      else
        ${NCPATH}/ncks -d time,$mon nudg_chunk$((chunk+1)).nc nudg_chunk$((chunk+2))_$mon.nc
      fi
    done
    for ((mon=1;mon<=3;mon++)) ; do
      if [[ -e ${PATHNUDG}/%OCEAN_NUDDATA%_1m_$((RUN_year+2))0${mon}_grid_T_02.nc.gz ]] ; then
        cp ${PATHNUDG}/%OCEAN_NUDDATA%_1m_$((RUN_year+2))0$mon_grid_T_02.nc.gz nudg_chunk$((chunk+2))_0$mon.nc.gz
        gunzip nudg_chunk$((chunk+2))_0$mon.nc.gz
      else
        ${NCPATH}/ncks -d time,$mon nudg_chunk$((chunk+1)).nc nudg_chunk$((chunk+2))_0$mon.nc
      fi
    done
    ${NCPATH}/ncrcat -n 3,2,1 nudg_chunk$((chunk+2))_10.nc nudg_chunk$((chunk+2))_10-12.nc
    ${NCPATH}/ncrcat -n 3,2,1 nudg_chunk$((chunk+2))_01.nc nudg_chunk$((chunk+2))_1-3.nc
    ;;
    *) echo "not coded yet. Please start date month Jan or Jun" ;;   
  esac
  ${NCPATH}/ncrcat nudg_chunk$((chunk+2))_1-3.nc nudg_chunk$((chunk+2))_4-9.nc nudg_chunk$((chunk+2))_10-12.nc nudg_chunk$((chunk+2)).nc
  rm -f nudg_chunk$((chunk+2))_*.nc

fi

################################################################################
#                          CLEAN FROM PREVIOUS CHUNK                           #
################################################################################
#
if [ -d ${RUN_dir}/NEMO_Restart_$((chunk-1)) ] ; then
  rm -rf ${RUN_dir}/NEMO_Restart_$((chunk-1))
fi
if [ -d ${RUN_dir}/Output_$((chunk-1)) ] ; then
  rm -rf ${RUN_dir}/Output_$((chunk-1))
fi
#
################################################################################
#                                FINAL CLEANING                                #
################################################################################
#
#if [[ $Chunk_last = .TRUE. ]]; then
#  rm -r $RUN_dir
#fi
#
touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date

