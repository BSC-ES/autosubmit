#!/bin/ksh
###############################################################################
#                              RUN EC_EARTH
###############################################################################
#
#@ job_name         = JOBNAME
#@ wall_clock_limit = 06:00:00
#@ output           = LOGDIR/JOBNAME_%j.out
#@ error            = LOGDIR/JOBNAME_%j.err
##@ output           = /gpfs/scratch/ecm86/${USER}/LOGDIR/JOBNAME_%j.out
##@ error            = /gpfs/scratch/ecm86/${USER}/LOGDIR/JOBNAME_%j.err
#@ total_tasks      = 45
#@ initialdir       = INITIALDIR 
#@ tasks_per_node   = 4
#@ tracing          = 1
set -exuv
date
#
# Basic Definitions
#
Myversion=VERSION
Mymember=MEMBER
Myexpid=EXPID
START_date=SDATE
EXPINI=b07n

case $Myversion in
     v2.1) ECEARTH=/gpfs/projects/ecm86/ecm86503/ecearth2.1
           SCRIPTDIR=/gpfs/projects/ecm86/ecearth/V2.1/setup
           TESTDATADIR=/gpfs/projects/ecm86/ecearth/V2.1/inidata
     ;;
     v2.2.0) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.0
           SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.0/setup
           TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.0/inidata
     ;;
     v2.2.1) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.1
             SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.1/setup
             TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.1/inidata
     ;;
esac


chunk=CHUNK
day_prev=PREV 

#in days
### WARNING in the 2 following variable should be set the start
###and end of the previous chunk!!!
Chunk_start_date=Chunk_START_DATE
Chunk_end_date=Chunk_END_DATE
RUN_days=RUN_DAYS
# in hours
Chunk_length=$(( ${RUN_days} * 24 )) # In hours
Chunk_last_day_prev=$(( ${day_prev} * 24 )) # In hours
Chunk_last=Chunk_LAST


#
# IFS
#
IFS_resolution=T159L62
IFS_nproc=28 
NPROMA=40
LFASTRES=.FALSE.
IFSDIR=${ECEARTH}
IFS_exe=${IFSDIR}/bin/ifsMASTER



#
# Model Configuration
#
PATH=${SCRIPTDIR}:${PATH}
WRITINGDIR=/gpfs/scratch/ecm86/${USER}/${Myexpid}
RUN_dir=${WRITINGDIR}/${START_date}/fc${Mymember}_restarted_chunk_${chunk}

mkdir -p $RUN_dir
cd $RUN_dir
INIPATH=${RUN_dir}/inidata
HSMPATH=/HSM/ecm86/ecearth/${Myexpid}/${START_date}/fc${Mymember}/restarts
mkdir -p $INIPATH

CMIP5=.TRUE.
if [[ $CMIP5 = .TRUE. ]] ; then
   cp -r /gpfs/projects/ecm86/ecearth/data/cmip5/postins ${INIPATH}/
   cp /gpfs/projects/ecm86/ecearth/data/cmip5/dirlist  ${INIPATH}/
fi

scp login6:/HSM/ecm86/ecearth/ic/atmos/${EXPINI}/${EXPINI}_initial_an0_fc0_${START_date}00.tar ${INIPATH}
cd ${INIPATH}
tar xvf ${EXPINI}_initial_an0_fc0_${START_date}00.tar
rm -f ${EXPINI}_initial_an0_fc0_${START_date}00.tar
#
# Rename the initial conditions
#
case $Myversion in
     v2.1) PREFIX_LST="CL GG SH"
     ;;
     v2.2) PREFIX_LST="GG SH"
           cp ${TESTDATADIR}/ifs/${IFS_resolution}/ICMCLb0ifINIT ICMCL${Myexpid}INIT
     ;;
     v2.2.1) PREFIX_LST="GG SH"
           cp ${TESTDATADIR}/ifs/${IFS_resolution}/ICMCLb0ifINIT ICMCL${Myexpid}INIT
     ;;

esac
for PREFIX in $PREFIX_LST ; do
    mv ${EXPINI}_initial_an0_fc0_${START_date}00/ICM${PREFIX}${EXPINI}INIT ICM${PREFIX}${Myexpid}INIT
done
mv ${EXPINI}_initial_an0_fc0_${START_date}00/ICMGG${EXPINI}INIUA ICMGG${Myexpid}INIUA
cd $RUN_dir



for REST in RESTA RESTO ; do
     case ${REST} in
         RESTA) PATHSU="IFS_Restart_$((chunk-1))"
	        PATHDR="IFS_Restart_$((chunk-1))/"
         ;;
         RESTO) PATHSU="NEMO_Restart_$((chunk-1))"
	        PATHDR=""
         ;;
     esac	 
     
     tarfile="${REST}_${Myexpid}_${START_date}_fc${Mymember}_${Chunk_start_date}-${Chunk_end_date}.tar"
     scp login6:${HSMPATH}/$tarfile ${RUN_dir}/
     if [[ -d $PATHSU ]] ; then
      rm -r $PATHSU
     fi 
     mkdir $PATHSU
     tar -xvf $tarfile  
     mv gpfs/scratch/ecm86/${USER}/${Myexpid}/${START_date}/fc${Mymember}/${PATHDR}* ${PATHSU}/
     rm -f $tarfile
     
     rm -r gpfs/
     cp ${PATHSU}/* ${RUN_dir}
done

ln -sf ${TESTDATADIR}/ifs/${IFS_resolution}/* .
ln -sf ${INIPATH}/* .

#
# NEMO 
#
NEMO_resolution=orca1
NEMO_config=`echo ${NEMO_resolution} | tr [a-z] [A-Z]`
NEMO_nprocX=4
NEMO_nprocY=4
NEMO_nproc=$((NEMO_nprocX*NEMO_nprocY))
NEMO_exe=${ECEARTH}/bin/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY}

#
# OASIS
#
OASIS3_oldWeights=true
OASIS3_weightsDir=${TESTDATADIR}/oasis3/weights/big_endian/${IFS_resolution}_${NEMO_resolution}
OASIS3_exe=${ECEARTH}/bin/oasis3.MPI1.x
WAM=false
#
export OASIS3=yes
export OASIS3DEBUGLEVEL=2
export DR_HOOK_IGNORE_SIGNALS='-1'
#export MPI_NAP=5
ulimit -c 1000000
export LOCAL_DEFINITION_TEMPLATES=${ECEARTH}/sources/ifs/src/emos/local_definitions
export MBX_SIZE=512000000

RUN_coupFreq=3

NFRP=6 # Frequency of postprocessing in hours
ADVSCH=cen2 # Ocean advection scheme

##########
#Here we assume all initial conditions has been copied or linked to the RUN_dir
#############


# Run Directory Initialization
# 
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_zgr.nc ${RUN_dir}/mesh_hgr.nc ${RUN_dir}/mask.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "Chunk: ${chunk}"
 echo "Chunk_length: ${Chunk_length}"
 LFASTRES=.TRUE.

CMIP5=.TRUE.
if [[ $CMIP5 = .TRUE. ]] ; then
   NFRP=3 # Frequency of postprocessing in hours
   RUN_coupFreq=3 # Becomes NFRCO
   WAM=false
   ADVSCH=tvd # Ocean advection scheme
fi


 case $Myversion in
     v2.1) EXPVER=$(${SCRIPTDIR}/setupifs_${Myversion}.ksh -r ${IFS_resolution} -e ${ECEARTH} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -o ${Chunk_last} -1 ${TESTDATADIR} -2 ${Myexpid})
     ;;
     v2.2.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p $NPROMA -o ${Chunk_last} -0 ${TESTDATADIR} -2 ${Myexpid} -3 $LFASTRES)
     ;;
     v2.2.1) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p $NPROMA -o ${Chunk_last} -0 ${TESTDATADIR} -2 ${Myexpid} -3 $LFASTRES -4 $NFRP)
     ;;

 esac

 if [[ ${OASIS3_oldWeights} == false ]]; then
  ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -0 ${TESTDATADIR}
 else
  ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -w -W ${OASIS3_weightsDir} -0 ${TESTDATADIR}
 fi
#
 if [[ $Myversion = v2.2.1 || $Myversion = v2.2.0 ]] ; then
       if [[ ${Chunk_last_day_prev} != '0' ]]; then
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH}
       else
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH}
       fi
 else
       if [[ ${Chunk_last_day_prev} != '0' ]]; then
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date}
       else
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${CHunk_length} -0 ${TESTDATADIR} -1 ${START_date}
       fi
    fi

 rm -f rcf
 rm -f *f00000000*
 rm -f postins 
 rm -f dirlist
 ln -sf ${INIPATH}/* .

 ls -l
#
# Location of the executables
# 
 IFS_exe="${IFS_exe}"
 NEMO_exe="${NEMO_exe}"
 OASIS3_exe="${OASIS3_exe}"
#
# Model Run
#
 echo "0 ${OASIS3_exe}" > silly.conf
 echo "1-$IFS_nproc ${IFS_exe} -v ecmwf -e $EXPVER" >> silly.conf
 echo "29-44 ${NEMO_exe}" >> silly.conf
 date
#
# set +e is required because there are random errors at the end
# of each chunk
#
 set +e
 time srun -n 45 -l --multi-prog silly.conf
 set -e
 echo "finished chunk"
 touch finished_chunk_${chunk}
 date


#
# Copy the ocean restarts to a directory.
# If not the first chunk, the restarts of the previous chunk are removed from the two places
# where they are kept and they are also removed from the NEMO_restart_* directory if the HSM
# job has been successful.
#
mkdir -p NEMO_Restart_$chunk
ldp=`printf '%08d' $((Chunk_last_day_prev+Chunk_length))`
cp ORCA1_${ldp}_restart*nc NEMO_Restart_$chunk/.
if [[ $chunk > 1 ]] ; then
   ldp=`printf '%08d' ${Chunk_last_day_prev}`
   rm -f ORCA1_${ldp}_restart*nc
   rm -f ORCA1_Restart/*
fi

#
# Save IFS restart files and prepare for continuation of the run
#

Chunk_end=$((Chunk_length+Chunk_last_day_prev))
Chunk_restart_tag=`printf "%06d0000" $(( ${Chunk_last_day_prev}/24+${Chunk_length}/24 ))`

if [[ `ls -1 guarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9]` = '0' ]]; then
 echo "EC-Earth RUN FAILED"
 exit 1
fi

Chunk_last_day_prev=$((${Chunk_last_day_prev} + ${Chunk_length}))
echo "Chunk_last_day_prev: ${Chunk_last_day_prev}"

mkdir -p IFS_Restart_${chunk}
mv guarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] gxtrarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] \
srf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] surf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] \
 tmrf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] IFS_Restart_${chunk}
ln -sf IFS_Restart_${chunk}/* .
cp rcf IFS_Restart_${chunk}

#  
# Move the output for postprocessing
#

output_dir="Output_${chunk}"
mkdir -p ${output_dir}
mv ICMGG${Myexpid}+* ICMSH${Myexpid}+* ORCA1_MM_*.nc ${output_dir}/.


find ${RUN_dir}/. -type d | xargs chmod 775 
find ${RUN_dir}/. -type f | xargs chmod 664 

touch LOGDIR/JOBNAME_COMPLETED
