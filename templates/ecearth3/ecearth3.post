set -exuv
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
ECEARTH_DIR=%MODELS_DIR%/ecearth
PATH=%CDOPATH%:${PATH}
PATH=%GRIBAPIPATH2%:${PATH}
PATH=%REBUILDPATH%:${PATH}
USER=%HPCUSER%

#
# Model Configuration
#
VERSION=%VERSION%
EXPID=%EXPID%
MEMBER=%MEMBER%
START_date=%SDATE%
WRITINGDIR=${SCRATCH_DIR}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}
SAVEDDO=%SAVEDDO%

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
# in days
RUN_days=%RUN_DAYS%
# in hours
Chunk_length=$(( ${RUN_days} * 24 ))
# in months
RUN_chunk_size=%CHUNKSIZE%

#
ATM_rstdate=%ATM_rstdate%
if [[ $ATM_rstdate == '' ]]; then
   ATM_rstdate=${START_date}
fi
nmonthini=`echo $ATM_rstdate | cut -c5-6`
nyearini=`echo $ATM_rstdate | cut -c1-4`

#
# Model output path w.r.t chunk number
#
output_dir=${RUN_dir}/Output_${chunk}
tmp_output_dir=%SCRATCH_TMP_DIR%/${USER}/%JOBNAME%
find ${output_dir}/. -type d | xargs chmod 775 2>/dev/null
find ${output_dir}/. -type f | xargs chmod 664 2>/dev/null

if [[ -d ${output_dir} ]]; then
   mkdir -p $tmp_output_dir
   cd $output_dir
else
   exit
fi

#
# Rebuild ocean output
#
date
if [[ ! -a %JOBNAME%.opost ]]; then
   case ${SAVEDDO} in
    'TRUE') 
     interval=1d 
     grid_types="grid_T"
     # grid_types="grid_W grid_T grid_U grid_V icemod" for 5d
    ;;
    'FALSE')
     interval=1m
     grid_types="grid_T"
    ;;
   esac
   cp ${EXPID}_${interval}_* $tmp_output_dir
   cd $tmp_output_dir
   prefix=${EXPID}_${interval}_${Chunk_start_date}_${Chunk_end_date}
   for grid_type in ${grid_types}; do
       output_file=${prefix}_${grid_type}.nc
       rebuild -v 3 -o ${output_file} ${prefix}_${grid_type}_[0-9][0-9][0-9][0-9].nc
       gzip -9 ${output_file}
       rm -f ${prefix}_${grid_type}_[0-9][0-9][0-9][0-9].nc
       rm -f ${output_dir}/${prefix}_${grid_type}_[0-9][0-9][0-9][0-9].nc
       mv ${output_file}.gz $output_dir
   done
   cd $output_dir
   touch %JOBNAME%.opost
fi

#
# Compute atmospheric monthly means
#
if [[ ! -a %JOBNAME%.apost ]]; then
 nmon=1
 year=${nyearini}
 while [[ $nmon -le $RUN_chunk_size ]]; do
       date
       nmonthini=${nmonthini#0}
       month=$((nmonthini+(chunk-1)*RUN_chunk_size+nmon-1))
       year=$((nyearini+((month-1)/12)))
       month=$((month-((month-1)/12)*12))
       month=`printf '%02d' ${month}`
       types="SH GG"
       for type in $types; do
           prefix=ICM${type}${EXPID}
           file=${prefix}+${year}${month}
           if [[ ! -a ${file}.grb ]]; then
	          cp ${file} $tmp_output_dir
	          cd $tmp_output_dir
              cp ${file} ${file}.tmp
              case $type in
               SH) PARS=`grib_ls -m ${file} | head -n -3 | tr -s ' ' | cut -f7 -d ' ' | sort -n | uniq | grep ^[0-9]`;; # tested with grib_api
               GG) PARS=`grib_ls -m ${file} | head -n -3 | tr -s ' ' | cut -f6 -d ' ' | sort -n | uniq | grep ^[0-9]`;; # version 1.9.9
              esac
              for PAR in $PARS; do
                  if [[ $PAR == 133.128 || $PAR == 152.128 || \
                        $PAR == 246.128 || $PAR == 247.128 || $PAR == 248.128 ]]; then
                     rm -f ${PAR}.grb
                     grib_copy -w param=${PAR} ${file}.tmp ${PAR}.grb
                     if [[ $PAR == 152.128 ]]; then
                        rm -f ${PAR}.grb
                     fi
                     mv ${file}.tmp ${file}.tmp2
                     grib_copy -w param!=${PAR} ${file}.tmp2 ${file}.tmp
                 fi
              done
              PARS="133.128 246.128 247.128 248.128"
              for PAR in $PARS; do
                  if [[ -a ${PAR}.grb ]]; then
                     cdo -R -r -t ecmwf -f nc splitvar ${PAR}.grb ${file}_
                     rm -f ${PAR}.grb
                  fi
              done
              cdo -R -r -t ecmwf -f nc splitvar ${file}.tmp ${file}_
              ls -l ${file}_*.nc
              rm -f ${file}.tmp ${file}.tmp2
#
              date
              for infile in `ls ${file}_*.nc`; do
                  name=`basename $infile .nc`
                  quant=`echo $name | sed s/${prefix}+${year}${month}_//`
                  outfile=IM_${quant}_${year}${month}
                  # Needed because last timestep is the 00:00 hours of the next day of the month
                  cdo -f nc -r -timmean ${prefix}+${year}${month}_${quant}.nc ${outfile}_mm.nc
                  mv ${outfile}_mm.nc ${outfile}_mm.nc.tmp
                  # Shift the time to the correct month
                  cdo shifttime,-1month ${outfile}_mm.nc.tmp ${outfile}_mm.nc
                  rm -f ${prefix}+${year}${month}_${quant}.nc
              done
              cdo -f nc -r -merge IM_*_${year}${month}_mm.nc MMA_${EXPID}_${type}_${year}${month}.nc
              gzip -9 MMA_${EXPID}_${type}_${year}${month}.nc
              rm -f IM_*_${year}${month}_mm.nc
              mv ${file} ${output_dir}/${file}.grb
              mv MMA_* ${output_dir}
              cd ${output_dir}
              rm ${file}
           fi
       done
       nmon=$((nmon+1))
 done

 touch %JOBNAME%.apost
fi

if [[ -a %JOBNAME%.opost && -a %JOBNAME%.apost ]]; then
   rm -rf $tmp_output_dir
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED
fi

date

