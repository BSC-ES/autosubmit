#!/usr/bin/env python

# Copyright 2015 Earth Sciences Department, BSC-CNS

# This file is part of Autosubmit.

# Autosubmit is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# Autosubmit is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with Autosubmit.  If not, see <http://www.gnu.org/licenses/>.

"""Script for handling experiment monitoring"""
import argparse
import os
import sys
from typing import Optional

script_dir = os.path.abspath(os.path.dirname(sys.argv[0]))
sys.path.append(script_dir)
sys.path.append(os.path.normpath(os.path.join(script_dir, os.pardir)))
# noinspection PyUnresolvedReferences
from log.log import Log, AutosubmitCritical, AutosubmitError  # noqa: E402
from autosubmit import delete_lock_file, exit_from_error  # noqa: E402
from autosubmit.autosubmit import Autosubmit  # noqa: E402
from autosubmitconfigparser.config.configcommon import AutosubmitConfig  # noqa: E402


# noinspection PyProtectedMember
def main():
    args = Optional[argparse.Namespace]
    try:
        return_value, args = Autosubmit.parse_args()
        if args:
            return_value = Autosubmit.run_command(args)
        delete_lock_file()
    except BaseException as e:
        delete_lock_file()
        if args:
            Log.debug(f"Error in arguments: {args}")
            if args.command:
                Log.error(f"Error in command: {args.command}")
            if args.expid:
                Log.error(f"Error in experiment: {args.expid}")
                try:
                    as_conf = AutosubmitConfig(args.expid)
                    as_conf.reload()
                    Log.error(f"Experiment version: {as_conf.experiment_data.get('CONFIG', {}).get('AUTOSUBMIT_VERSION', 'unknown')}")
                except BaseException as e2:
                    Log.debug(f"Invalid Autosubmit configuration: {e2}")
        return_value = exit_from_error(e)
    return return_value


if __name__ == "__main__":
    exit_code = main()
    sys.exit(exit_code)  # Sys.exit ensures a proper cleanup of the program, while os._exit() does not.
