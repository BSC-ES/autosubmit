%ENVIRONMENT%

set -xuve
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
ECEARTH_DIR=%MODELS_DIR%/%MODEL%

#
# Model Configuration
#
VERSION=%VERSION%
MEMBER=%MEMBER%
EXPID=%EXPID%
START_date=%SDATE%

ECEARTH=${ECEARTH_DIR}/$VERSION
TESTDATADIR=${ECEARTH}/inidata/testdata

WRITINGDIR=${SCRATCH_DIR}/%HPCUSER%/${EXPID}
BINPATH=${WRITINGDIR}/model/bin
SCRIPTDIR=${WRITINGDIR}/model/setup
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}
cd $RUN_dir

#
# IFS
#
IFS_resolution=%IFS_resolution%
IFS_nproc=%IFS_nproc%
NPRTRVIFS=%NPRTRVIFS%
NPROMA=40 # No need to change this
WAM=false # No need to change this
CMIP5=%CMIP5%
Nrcp=%Nrcp% # RCP value
NFRP=%NFRP% # Postprocessing frequency (in hours)
LLAST=TRUE
NFIXYR=%NFIXYR%
NHINCSOL=%NHINCSOL%
IFS_exe=${BINPATH}/ifsMASTER

#
# COMMON
#
RUN_coupFreq=%RUN_coupFreq% # Becomes NFRCO
export OASIS3=%OASIS3%
export OASIS3DEBUGLEVEL=3
export DR_HOOK_IGNORE_SIGNALS='-1'
export LOCAL_DEFINITION_TEMPLATES=${ECEARTH}/sources/ifs/src/emos/local_definitions
export MBX_SIZE=512000000 # No need to change this

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
Chunk_last=%Chunk_LAST%
# In months
RUN_months=%CHUNKSIZE%
# In days
RUN_days=%RUN_DAYS%
# In hours
RUN_hours=$((RUN_days*24))
# Last Day Previous
day_prev=%PREV%
MODEL_rstini=%MODEL_rstini%
if [[ $MODEL_rstini != '' ]]; then
   day_prev_rst=$(cat day_prev_rst)
   day_prev=$((day_prev_rst+day_prev))
fi
Chunk_last_day_prev=$((day_prev*24))
Chunk_end=$((Chunk_last_day_prev+RUN_hours))
# restart tags
Chunk_ifs_restart_tag=$(printf %06d0000 $(( Chunk_end / 24 )))

#
# Run Directory Initialization
# 
if [[ $chunk == 1 ]]; then
   echo "FIRST Chunk"
   echo "Chunk_length: ${RUN_hours}"
   LFASTRES=FALSE
   rm -f ${RUN_dir}/anaisout
   rm -f ${RUN_dir}/mesh_*.nc ${RUN_dir}/mask*.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
else
   echo "Chunk: ${chunk}"
   echo "Chunk_length: ${RUN_hours}"
   LFASTRES=TRUE
   rm -f ${RUN_dir}/anaisout
   rm -f ${RUN_dir}/mesh_zgr.nc ${RUN_dir}/mesh_hgr.nc ${RUN_dir}/mask.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
   ln -sf IFS_Restart_$((chunk-1))/* .
   rm -f rcf; cp IFS_Restart_$((chunk-1))/rcf .
fi

#
# Control the use of the scenario
#
if [[ $VERSION == "v2.3.0" || $VERSION == "v2.2.3" || $VERSION == "v2.2.2" ]] ; then
   yy=2006
else
   yy=2000
fi
if [[ `echo $Chunk_start_date | cut -c1-4` < $yy ]] ; then
   Nrcp=0
fi
#

if [[ ! -a finished_chunk_${chunk} ]] ; then

 rm -rf IFS_Restart_${chunk} *${Chunk_ifs_restart_tag}*

# setupifs.ksh
 case $VERSION in
     v2.1)   EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -o .${Chunk_last}. -1 ${TESTDATADIR} -2 ${EXPID})
     ;;
     v2.2.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}.)
     ;;
     v2.2.1) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP})
     ;;
     v2.2.2) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${CMIP5}. -6 ${Nrcp})
     ;;
     v2.2.3) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${CMIP5}. -6 ${Nrcp})
     ;;
     v2.3.0) EXPVER=$(${SCRIPTDIR}/setupifs2.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+RUN_hours)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o .${LLAST}. -0 ${TESTDATADIR} -1 ${NPRTRVIFS} -2 ${EXPID} -3 .${LFASTRES}. -4 ${NFRP} -5 .${CMIP5}. -6 ${Nrcp} -7 ${NFIXYR} -8 ${NHINCSOL})
     ;;
 esac

#
# Location of the executables
# 
 IFS_exe="${IFS_exe}"

#
# Model Run
#
 ls -l
 date
%PARALLEL_RUN_IFS%

 date
fi

#
# Check either simulation completed successfully or not
#
ls -1 *${Chunk_ifs_restart_tag}*
if [[ $? == 0 ]]; then
   echo "finished chunk"
   touch finished_chunk_${chunk}
else
   echo "failed chunk"
   exit 1
fi

#
# Save IFS restart files
#
mkdir -p IFS_Restart_${chunk}
mv *${Chunk_ifs_restart_tag}* \
   rcf IFS_Restart_${chunk}
rm -f srf* guarf* gxtrarf* surf* tmrf*

#
# Delete IFS restart files (which has been stored correctly)
#
if [[ -a rest_$((chunk-2)) && -d IFS_Restart_$((chunk-2)) ]]; then
 rm -rf IFS_Restart_$((chunk-2))
fi

#
# Save IFS output for postprocessing
#
mkdir -p Output_${chunk}
mv ICMGG${EXPID}+* ICMSH${EXPID}+* Output_${chunk}

touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date

