set -exuv
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%

#
# Model Configuration
#
VERSION=%VERSION%
MEMBER=%MEMBER%
EXPID=%EXPID%
START_date=%SDATE%

#
###############################################################################
# General settings
#
NEMODIR=${SCRATCH_DIR}/models/nemo/${VERSION}-orca1
WRITINGDIR=${SCRATCH_DIR}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${MEMBER}
NEMO_nproc=36

#
# Chunk management
#
chunk=%CHUNK%
day_prev=$(( (CHUNK-1) * (RUN_days) ))

# in days
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
# in hours
Chunk_length=$(( ${RUN_days} * 24 )) # In hours
Chunk_last_day_prev=$(( ${day_prev} * 24 )) # In hours
Chunk_last=%Chunk_LAST%

#
###############################################################################
# Options
#
SPINUP='yes'
#
case ${MEMBER} in
  fc0|fc1|fc2|fc3) type=ERAINTERIM-ORCA1 ;;
  fc4|fc5|fc6|fc7) type=DFS4.3 ;;
esac
#
###############################################################################
cd $RUN_dir
#
#
RUN_year=`echo $Chunk_start_date | cut -c1-4`
if [[ ${SPINUP} == 'yes' ]] ; then
  RUN_days=365
  listvars=( q2 qlw qsw t2 u10 v10 snow precip )
  if [[ ${chunk} > 1 ]] ; then 
    for var in ${listvars[@]} ; do
    mv ${var}_core_y${RUN_year}.nc ${var}_core_y$((RUN_year+1)).nc
    mv ${var}_core_y$((RUN_year-1)).nc ${var}_core_y${RUN_year}.nc
    mv ${var}_core_y$((RUN_year-2)).nc ${var}_core_y$((RUN_year-1)).nc
    done
  fi
else
  RUN_days=%RUN_DAYS%
fi
#

################################################################################
#  Preparing restarts
# ~~~~~~~~~~~~~~~~~~~~
#
if [[ ${SPINUP} == 'yes' && ${chunk} == 1 ]] ; then
  restflag='.false.'
else
  restflag='.true.'
  for ((l=0; l<$NEMO_nproc; l++)); do
    ln -sf ORCA1_$(printf "%08d" ${Chunk_last_day_prev})_restart_$(printf "%04d" $l).nc restart_$(printf "%04d" $l).nc
    ln -sf ORCA1_$(printf "%08d" ${Chunk_last_day_prev})_restart_ice_$(printf "%04d" $l).nc restart_ice_$(printf "%04d" $l).nc
    rm -f ORCA1_$(printf "%08d" $((Chunk_last_day_prev+Chunk_length)))_restart_*.nc
  done
fi
#
################################################################################
#
#  Preparing NEMO namelists
# ~~~~~~~~~~~~~~~~~~~~~~~~~~~
if [[ ${SPINUP} == 'yes' ]] ; then
  restfreq=${Chunk_length}
else
  restfreq=24
fi

ksh $NEMODIR/setup/create_namelist.${VERSION}.ksh -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -1 $Chunk_start_date -c 0 -f ${restfreq} -r $restflag -t ${type}
  
################################################################################
#
# Start running 
# ~~~~~~~~~~~~~~~~
#
%PARALLEL_RUN_NEMO%

# #############################################################################
#
# Move the output for postprocessing
#
output_dir="Output_${chunk}"
mkdir -p ${output_dir}
mv ORCA1_1m_*.nc ${output_dir}/. > /dev/null 2>&1
#
# #############################################################################
#
# Store the restarts  
#
mkdir -p NEMO_Restart_$chunk
if [[ ${SPINUP} !=  'yes' ]] ; then
  ldp0=$((Chunk_last_day_prev + 24 ))
  while [[ $ldp0 -lt $((Chunk_last_day_prev+Chunk_length)) ]] ; do
    ldp=`printf '%08d' $ldp0`
    cp ORCA1_${ldp}_restart*nc NEMO_Restart_$chunk/.
    ldp0=$((ldp0 + 24))
  done
fi
ldp=`printf '%08d' $((Chunk_last_day_prev+Chunk_length))`
cp ORCA1_${ldp}_restart*nc NEMO_Restart_$chunk/.
if [[ $chunk > 1 ]] ; then
   ldp=`printf '%08d' ${Chunk_last_day_prev}`
   rm -f ORCA1_${ldp}_restart*nc
fi
#
###############################################################################
#
touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date
