set -evx
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
HSMdir=%HSM_DIR%
DBdir=%DB_DIR%

#
# Model Configuration
#
EXPID=%EXPID%
MEMBER=%MEMBER%
START_date=%SDATE%
WRITINGDIR=${SCRATCH_DIR}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_last=%Chunk_LAST%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%

# In days
Chunk_end_in_days=%Chunk_End_IN_DAYS%
# In hours
Chk_length=$((Chunk_end_in_days*24))
day_prev_rst=%day_prev_rst%
if [[ $day_prev_rst != '' ]]; then
   Chk_length=$(($((Chunk_end_in_days+day_prev_rst))*24))
fi
Chunk_length=`printf '%08d' ${Chk_length}`
# In months
RUN_chunk_size=%CHUNKSIZE%

#
# Output path on HSM
#
PATHOUT="${HSMdir}/exp/${EXPID}/${START_date}/${MEMBER}"
if [[ ! -d ${PATHOUT} ]] ; then
   echo "HOUSTON we have a problem!"
   echo " this directory should already exist ! ${PATHOUT}"
   exit
fi

output_dir=${RUN_dir}/Output_${chunk}

if [[ -d ${RUN_dir} ]] ; then
   cd $RUN_dir
else
   exit
fi

###############################################################################
#                               SAVE RESTARTS
###############################################################################
PATHOUT_RES="${PATHOUT}/restarts"

if [[ ! -d ${PATHOUT_RES} ]] ; then
   mkdir -p ${PATHOUT_RES}
fi

for REST in RESTA ; do
    case ${REST} in
         RESTA) PATHSU="/IFS_Restart_${chunk}"
                FILEPREF=""
         ;;
         RESTO) PATHSU="/NEMO_Restart_${chunk}"
                FILEPREF="ORCA1_${Chunk_length}_restart"
         ;;
    esac
# 
    if [[ ! -a ${REST}_${chunk} ]] ; then
       Basedir="${RUN_dir}${PATHSU}"
       if [[ -d ${Basedir} ]] ; then
          ls -l ${Basedir}/${FILEPREF}*
       else
          exit 1
    fi

#
# Create and copy tar file
#
     tarfile="${REST}_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"
     tar -cvf $tarfile ${Basedir}/${FILEPREF}*
     cp $tarfile $PATHOUT_RES

#
# Check target file
#
     locfile=`md5sum ${tarfile}|cut -d" " -f1`
     remfile=`md5sum ${PATHOUT_RES}/${tarfile}|cut -d" " -f1`
     if [[ "$locfile" == "$remfile" ]] ; then
       echo "The file has been correctly stored"
       touch ${RUN_dir}/${REST}_${chunk}
       rm -f $tarfile
     else
       exit 1
     fi
     date
    fi
done

if [[ -a RESTA_${chunk} ]] ; then
   rm ${RUN_dir}/RESTA_${chunk}
   touch ${RUN_dir}/rest_${chunk}
fi

if [[ -d ${output_dir} ]] ; then
   cd $output_dir
else
   exit
fi

PATHOUT_OUT="${PATHOUT}/outputs"
if [[ ! -d ${PATHOUT_OUT} ]] ; then
   mkdir -p ${PATHOUT_OUT}
fi   

#############################################
#
########### Save Atmospheric files ##########
#
#############################################

tarfile="MMA_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"

#
# Copying the monthly means (atmospheric daily data are in GRIB files)
#
tar -cvf ../$tarfile MMA_${EXPID}_*.nc.gz
cp ../$tarfile $PATHOUT_OUT
#
rm -f ${RUN_dir}/outa_${chunk}
locfile=`md5sum ../${tarfile}|cut -d" " -f1`
remfile=`md5sum ${PATHOUT_OUT}/${tarfile}|cut -d" " -f1`
if [[ "$locfile" == "$remfile" ]] ; then
   echo "The file has been correctly stored"
   touch ${RUN_dir}/outa_${chunk}
   rm -f ../$tarfile
else
   exit 1
fi
date

#
# Copying the atmospheric daily data (GRIB files)
#
SAVEDD=%SAVEDD%
if [[ $SAVEDD == TRUE ]] ; then
   for FILE in `ls ICM*grb` ; do
       cp $FILE ${PATHOUT_OUT}/.
       chmod 775 ${PATHOUT_OUT}/*
#
       locfile=`md5sum ${FILE}|cut -d" " -f1`
       remfile=`md5sum ${PATHOUT_OUT}/${FILE}|cut -d" " -f1`
       if [[ "$locfile" == "$remfile" ]] ; then
          echo "${FILE} has been correctly stored"
       else
          rm -f ${RUN_dir}/outa_${chunk}
          exit 1
       fi
   done
fi
#

cd $RUN_dir

if [[  -a outa_$chunk ]] ; then
   echo "We are now removing ${output_dir}"
   rm -rf ${output_dir} outa_$chunk
   touch out_$chunk
fi

find ${PATHOUT}/. -type d | xargs chmod 775 2>/dev/null
find ${PATHOUT}/. -type f | xargs chmod 664 2>/dev/null

if [[ $Chunk_last == TRUE && -a rest_$((chunk-1)) && -a out_$((chunk-1)) ]] ; then
   cd $WRITINGDIR

   echo "We are now removing ${RUN_dir}"
   rm -rf ${RUN_dir}
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/dir_${EXPID}_${START_date}_${MEMBER}_REMOVED
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/exp_${EXPID}_${START_date}_${MEMBER}_READY
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

   echo "We are now storing log files"
   tarfile="logfiles_${EXPID}_${START_date}_${MEMBER}.tar"
   tar -cvf $PATHOUT/$tarfile %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/*${EXPID}_${START_date}_${MEMBER}*
else
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED
fi

date
