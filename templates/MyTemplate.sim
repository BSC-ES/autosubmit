#!/bin/ksh
###############################################################################
#                              RUN EC_EARTH
###############################################################################
#
#@ job_name         = JOBNAME
#@ wall_clock_limit = 06:00:00
#@ output           = LOGDIR/JOBNAME_%j.out
#@ error            = LOGDIR/JOBNAME_%j.err
##@ output           = /gpfs/scratch/ecm86/${USER}/LOGDIR/JOBNAME_%j.out
##@ error            = /gpfs/scratch/ecm86/${USER}/LOGDIR/JOBNAME_%j.err
#@ total_tasks      = 45
#@ initialdir       = INITIALDIR 
#@ tasks_per_node   = 4
#@ tracing          = 1
set -exuv
date
#
# Basic Definitions
#
Myversion=VERSION
Mymember=MEMBER
Myexpid=EXPID
START_date=SDATE
case $Myversion in
     v2.1) ECEARTH=/gpfs/projects/ecm86/ecm86503/ecearth2.1
           SCRIPTDIR=/gpfs/projects/ecm86/ecearth/V2.1/setup
           TESTDATADIR=/gpfs/projects/ecm86/ecearth/V2.1/inidata
     ;;
     v2.2.0) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.0
           SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.0/setup
           TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.0/inidata
     ;;
     v2.2.1) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.1
             SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.1/setup
             TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.1/inidata
     ;;
esac

#
# Model Configuration
#
PATH=${SCRIPTDIR}:${PATH}
WRITINGDIR=/gpfs/scratch/ecm86/${USER}/${Myexpid}
RUN_dir=${WRITINGDIR}/${START_date}/fc${Mymember}

mkdir -p $RUN_dir
cd $RUN_dir
#
# IFS
#
IFS_resolution=T159L62
IFS_nproc=28 
NPROMA=40
LFASTRES=.FALSE.
IFSDIR=${ECEARTH}
IFS_exe=${IFSDIR}/bin/ifsMASTER

#
# NEMO 
#
NEMO_resolution=orca1
NEMO_config=`echo ${NEMO_resolution} | tr [a-z] [A-Z]`
NEMO_nprocX=4
NEMO_nprocY=4
NEMO_nproc=$((NEMO_nprocX*NEMO_nprocY))
NEMO_exe=${ECEARTH}/bin/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY}

#
# OASIS
#
OASIS3_oldWeights=true
OASIS3_weightsDir=${TESTDATADIR}/oasis3/weights/big_endian/${IFS_resolution}_${NEMO_resolution}
OASIS3_exe=${ECEARTH}/bin/oasis3.MPI1.x
WAM=false
#
export OASIS3=yes
export OASIS3DEBUGLEVEL=2
export DR_HOOK_IGNORE_SIGNALS='-1'
#export MPI_NAP=5
ulimit -c 1000000
export LOCAL_DEFINITION_TEMPLATES=${ECEARTH}/sources/ifs/src/emos/local_definitions
export MBX_SIZE=512000000

RUN_coupFreq=3

NFRP=6 # Frequency of postprocessing in hours
ADVSCH=cen2 # Ocean advection scheme

##########
#Here we assume all initial conditions has been copied or linked to the RUN_dir
#############


#
# Chunk management
#
chunk=CHUNK
day_prev=PREV 

#in days
Chunk_start_date=Chunk_START_DATE
Chunk_end_date=Chunk_END_DATE
RUN_days=RUN_DAYS
# in hours
Chunk_length=$(( ${RUN_days} * 24 )) # In hours
Chunk_last_day_prev=$(( ${day_prev} * 24 )) # In hours
Chunk_last=Chunk_LAST

# Run Directory Initialization
# 
if [[ $chunk == 1 ]]; then
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_*.nc ${RUN_dir}/mask*.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "FIRST Chunk"
 echo "Chunk_length: ${Chunk_length}"
 LFASTRES=.FALSE.
else
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_zgr.nc ${RUN_dir}/mesh_hgr.nc ${RUN_dir}/mask.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "Chunk: ${chunk}"
 echo "Chunk_length: ${Chunk_length}"
 LFASTRES=.TRUE.
fi

CMIP5=.TRUE.
if [[ $CMIP5 = .TRUE. ]] ; then
   NFRP=3 # Frequency of postprocessing in hours
   RUN_coupFreq=3 # Becomes NFRCO
   WAM=false
   ADVSCH=tvd # Ocean advection scheme
fi


case $Myversion in
     v2.1) EXPVER=$(${SCRIPTDIR}/setupifs_${Myversion}.ksh -r ${IFS_resolution} -e ${ECEARTH} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -o ${Chunk_last} -1 ${RUN_dir} -2 ${Myexpid})
     ;;
     v2.2.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p $NPROMA -o ${Chunk_last} -0 ${RUN_dir} -2 ${Myexpid} -3 $LFASTRES)
     ;;
     v2.2.1) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p $NPROMA -o ${Chunk_last} -0 ${RUN_dir} -2 ${Myexpid} -3 $LFASTRES -4 $NFRP)
     ;;

esac

if [[ ${OASIS3_oldWeights} == false ]]; then
 ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -0 ${RUN_dir}
else
 ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -w -W ${OASIS3_weightsDir} -0 ${RUN_dir}
fi
#
if [[ $Myversion = v2.2.1 || $Myversion = v2.2.0 ]] ; then
       if [[ ${Chunk_last_day_prev} != '0' ]]; then
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${RUN_dir} -1 ${START_date} -2 ${ADVSCH}
       else
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -0 ${RUN_dir} -1 ${START_date} -2 ${ADVSCH}
       fi
else
       if [[ ${Chunk_last_day_prev} != '0' ]]; then
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${RUN_dir} -1 ${START_date}
       else
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${CHunk_length} -0 ${RUN_dir} -1 ${START_date}
       fi
    fi
#
# Location of the executables
# 
IFS_exe="${IFS_exe}"
NEMO_exe="${NEMO_exe}"
OASIS3_exe="${OASIS3_exe}"
#
# Model Run
#
echo "0 ${OASIS3_exe}" > silly.conf
echo "1-$IFS_nproc ${IFS_exe} -v ecmwf -e $EXPVER" >> silly.conf
echo "29-44 ${NEMO_exe}" >> silly.conf
date
#
# set +e is required because there are random errors at the end
# of each chunk
#
set +e
time srun -n 45 -l --multi-prog silly.conf
set -e
echo "finished chunk"
date

#
# Preparing restart
# The NEMO restarts are not saved yet, they are created in a different part of the script
# Save IFS restart files and prepare for continuation of the run
#

Chunk_end=$((Chunk_length+Chunk_last_day_prev))
Chunk_restart_tag=`printf "%06d0000" $(( ${Chunk_last_day_prev}/24+${Chunk_length}/24 ))`

if [[ `ls -1 guarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9]` = '0' ]]; then
 echo "EC-Earth RUN FAILED"
 exit 1
fi

Chunk_last_day_prev=$((${Chunk_last_day_prev} + ${Chunk_length}))
echo "Chunk_last_day_prev: ${Chunk_last_day_prev}"

mkdir -p IFS_Restart_${chunk}
mv guarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] gxtrarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] \
srf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] surf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] \
 tmrf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] IFS_Restart_${chunk}
ln -sf IFS_Restart_${chunk}/* .
cp rcf IFS_Restart_${chunk}

#  
# Move the output for postprocessing
#

output_dir="Output_${chunk}"
mkdir -p ${output_dir}
mv ICMGG${Myexpid}+* ICMSH${Myexpid}+* ORCA1_MM_*.nc ${output_dir}/.


find ${RUN_dir}/. -type d | xargs chmod 775 
find ${RUN_dir}/. -type f | xargs chmod 775 

touch LOGDIR/JOBNAME_COMPLETED
