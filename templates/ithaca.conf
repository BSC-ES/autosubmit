[archdef]
MODELS_DIR = /scratch/cfu/models
SCRATCH_DIR = /scratch/cfu
SCRATCH_TMP_DIR = /tmp
HSM_DIR = /share/data/cfu

GRIBAPIPATH = /scratch/cfu/opt/grib_api-1.8.0/intel12/bin
GRIBAPIPATH2 = /scratch/cfu/opt/grib_api-1.9.9/intel12/bin
GRIBAPIPATH2_DEF = /scratch/cfu/opt/grib_api-1.9.9/intel12/share/definitions
GRIBAPIPATH2_SAM = /scratch/cfu/opt/grib_api-1.9.9/intel12/ifs_samples/grib1

NCDFPATH = /scratch/cfu/opt/netcdf-3.6.3/intel12/bin
NCOPATH = /scratch/cfu/opt/nco-3.9.9/intel12/bin
CDOPATH = /scratch/cfu/opt/cdo-1.4.5.1/intel12/bin
CDFPATH = /scratch/cfu/opt/cdftools-2.1/intel12/bin 
REBUILDPATH = /scratch/cfu/opt/rebuild-r1312/bin
REBUILD_NEMOPATH = /scratch/cfu/opt/rebuild_nemo-r3309/bin

ENVIRONMENT=
# modules setup
 source /opt/modules/init/ksh
 module load intel/12.1
 module load openmpi/1.6-intel
 export OMPI_MCA_btl=sm,self,openib

PARALLEL_RUN_IFS=
# set +e to avoid random errors at the end of each chunk
 set +e
 ulimit -s unlimited
 mpirun -n $IFS_nproc ${IFS_exe} -v ecmwf -e $EXPVER 
 set -e

PARALLEL_RUN_ECEARTH=
# prepare model.conf
 echo "-np $OASIS_nproc ${OASIS3_exe}" > model.conf
 echo "-np $IFS_nproc ${IFS_exe} -v ecmwf -e $EXPVER" >> model.conf
 echo "-np $NEMO_nproc ${NEMO_exe}" >> model.conf
# set +e to avoid random errors at the end of each chunk
 set +e
 ulimit -s unlimited
 mpirun --app model.conf
 set -e

PARALLEL_RUN_IFS3=
# set +e to avoid random errors at the end of each chunk
 set +e
 ulimit -s unlimited
 mpirun -n $ifs_numproc ${ifs_exe_file} -v ecmwf -e $exp_name
 set -e

PARALLEL_RUN_ECEARTH3=
# prepare model.conf
 echo "-np $oas_numproc ${oas_exe_file}" > model.conf
 echo "-np $ifs_numproc ${ifs_exe_file} -v ecmwf -e $exp_name" >> model.conf
 echo "-np $nem_numproc ${nem_exe_file}" >> model.conf
# set +e to avoid random errors at the end of each chunk
 set +e
 ulimit -s unlimited
 mpirun --app model.conf 
 set -e

PARALLEL_RUN_NEMO=
    #
    # Model Run
    #
    # set +e to avoid random errors at the end of each chunk
    #
     set +e
     ulimit -s unlimited
     mpirun -n $NEMO_nproc ${NEMO_exe}
     set -e
