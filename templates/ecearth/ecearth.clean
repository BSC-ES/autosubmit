set -xuve
date

#
# HPC Arch
#
HPCARCH=%HPCARCH%
case $HPCARCH in
 ecmwf)
  MKDIR="eval emkdir -p"
  CP="eval ecp -o"
  LS="eval els"
  CHMOD="eval echmod 664"
 ;;
 marenostrum3)
  MKDIR="dtmkdir --blocking -p"
  CP="dtcp --blocking -f"
  LS="dtls --blocking"
  CHMOD="dtchmod --blocking 664"
 ;;
 *)
  MKDIR="mkdir -p"
  CP="cp -f"
  LS="ls"
  CHMOD="chmod 664"
 ;;
esac

#
# General Paths
#
MODEL_DIR=%MODELS_DIR%/%MODEL%
SCRATCH_DIR=%SCRATCH_DIR%/%HPCPROJ%/%HPCUSER%
SCRATCH_TMP_DIR=%SCRATCH_TMP_DIR%/%HPCPROJ%/%HPCUSER%/%JOBNAME%
HSM_DIR=%HSM_DIR%

#
# Model Configuration
#
EXPID=%EXPID%
VERSION=%VERSION%
MEMBER=%MEMBER%
START_date=%SDATE%
START_date_1=%DAY_BEFORE%

ECEARTH=${MODEL_DIR}/$VERSION
TESTDATADIR=${ECEARTH}/inidata/testdata

WRITINGDIR=${SCRATCH_DIR}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
Chunk_last=%Chunk_LAST%
# In months
RUN_months=%CHUNKSIZE%
# In days
RUN_days=%RUN_DAYS%
# In hours
RUN_hours=$((RUN_days*24))

#
# Output Path on HSM (permanent storage)
#
PATHOUT="${HSM_DIR}/exp/${EXPID}/${START_date}/${MEMBER}"
$LS ${PATHOUT}
if [[ $? -ne 0 ]]; then
   echo "HOUSTON we have a problem!"
   echo " this directory should already exist! ${PATHOUT}"
   exit
fi

output_dir=${RUN_dir}/Output_${chunk}
if [[ ! -d ${RUN_dir} ]]; then
   exit
fi

#
# Prepar restarts (in case, if some chunks need to be rerun or the experiment is to be extended)
#
cd $RUN_dir
RERUN=%RERUN%
if [[ $RERUN == TRUE && ! -d $output_dir ]]; then
   rm -f *_$((chunk+1))
   RESTA="RESTA_${EXPID}_${START_date}_${MEMBER}_${chunk}_${Chunk_start_date}-${Chunk_end_date}.tar"
   RESTO="RESTO_${EXPID}_${START_date}_${MEMBER}_${chunk}_${Chunk_start_date}-${Chunk_end_date}.tar"
   $CP ${PATHOUT}/restarts/$RESTA .; $CP ${PATHOUT}/restarts/$RESTO .
   tar -xvf $RESTA; tar -xvf $RESTO
   rm -f $RESTA $RESTO
   touch %SCRATCH_DIR%/%HPCPROJ%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED
   exit
fi

#
# Save NEMO & IFS restart files at permanent storage
#
cd $RUN_dir
if [[ ! -a ${RUN_dir}/rest_${chunk} ]]; then

   PATHOUT_RES="${PATHOUT}/restarts"
   $MKDIR ${PATHOUT_RES}

   # Save Ocean files
   if [[ ! -a ${RUN_dir}/resto_${chunk} ]]; then
      tarfile="RESTO_${EXPID}_${START_date}_${MEMBER}_${chunk}_${Chunk_start_date}-${Chunk_end_date}.tar"
      tar -cvf $tarfile NEMO_Restart_${chunk}
      $CP $tarfile $PATHOUT_RES
      $CHMOD $PATHOUT_RES/$tarfile
      rm -f $tarfile
      touch ${RUN_dir}/resto_${chunk}
   fi

   # Save Atmospheric files
   if [[ ! -a ${RUN_dir}/resta_${chunk} ]]; then
      tarfile="RESTA_${EXPID}_${START_date}_${MEMBER}_${chunk}_${Chunk_start_date}-${Chunk_end_date}.tar"
      tar -cvf $tarfile IFS_Restart_${chunk}
      $CP $tarfile $PATHOUT_RES
      $CHMOD $PATHOUT_RES/$tarfile
      rm -f $tarfile
      touch ${RUN_dir}/resta_${chunk}
   fi

   if [[ -a ${RUN_dir}/resto_${chunk} && -a ${RUN_dir}/resta_${chunk} ]]; then
      rm -f ${RUN_dir}/resto_${chunk} ${RUN_dir}/resta_${chunk}
      touch ${RUN_dir}/rest_${chunk}
   fi
fi

#
# Save NEMO & IFS output files at permanent storage and clean disk
#
cd $output_dir
if [[ ! -a ${RUN_dir}/out_${chunk} ]]; then

   PATHOUT_OUT="${PATHOUT}/outputs"
   $MKDIR ${PATHOUT_OUT}

   # Save Ocean files
   if [[ ! -a ${RUN_dir}/outo_${chunk} ]]; then
      tarfile="MMO_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"

      # Copying the means available
      ls -1 ORCA1_??_${Chunk_start_date}_${Chunk_end_date}_??????.nc.gz | xargs tar -cvf ../${tarfile}
      $CP ../$tarfile $PATHOUT_OUT
      $CHMOD $PATHOUT_OUT/$tarfile
      rm -f ../$tarfile
      touch ${RUN_dir}/outo_${chunk}
   fi

   # Save Atmospheric files
   if [[ ! -a ${RUN_dir}/outa_${chunk} ]]; then
      tarfile="MMA_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"

      # Copying the monthly means
      ls -1 MMA_${EXPID}_*.nc.gz | xargs tar -cvf ../$tarfile
      $CP ../$tarfile $PATHOUT_OUT
      $CHMOD $PATHOUT_OUT/$tarfile
      rm -f ../$tarfile

      # Copying the daily data (GRIB files)
      SAVEDD=%SAVEDD%
      if [[ $SAVEDD == TRUE ]]; then
         for grbfile in `ls ICM*grb`; do
             $CP $grbfile $PATHOUT_OUT
             $CHMOD $PATHOUT_OUT/$grbfile
             rm -f $grbfile
         done
      fi
      touch ${RUN_dir}/outa_${chunk}
   fi

   if [[ -a ${RUN_dir}/outo_$chunk && -a ${RUN_dir}/outa_$chunk ]]; then
      rm -f ${RUN_dir}/outo_$chunk ${RUN_dir}/outa_$chunk
      touch ${RUN_dir}/out_$chunk
   fi
fi

#
# Tail of the chunk
#
cd $RUN_dir
if [[ -a rest_$chunk && -a out_$chunk ]]; then
   echo "We are now removing ${output_dir}"
   rm -rf $output_dir
fi

touch %SCRATCH_DIR%/%HPCPROJ%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

if [[ $Chunk_last == TRUE ]]; then
   cd %SCRATCH_DIR%/%HPCPROJ%/%HPCUSER%/%EXPID%/LOG_%EXPID%
   if [[ -a ${RUN_dir}/rest_$((chunk-1)) && -a ${RUN_dir}/out_$((chunk-1)) ]]; then
      echo "We are now removing ${RUN_dir}"
      rm -rf ${RUN_dir}
      touch dir_${EXPID}_${START_date}_${MEMBER}_REMOVED
      touch exp_${EXPID}_${START_date}_${MEMBER}_READY
   fi
   echo "We are now storing log files"
   stamp=`date +%Y%m%d_%H%M`
   tarfile="logfiles_${EXPID}_${START_date}_${MEMBER}_${stamp}.tar"
   set +e
   ls -1 *${EXPID}_${START_date}_${MEMBER}_* | xargs tar -cvf ../$tarfile
   set -e
   gzip -9 ../$tarfile
   $CP ../$tarfile.gz $PATHOUT
   $CHMOD $PATHOUT/$tarfile.gz
   rm -f ../$tarfile.gz
fi

date

