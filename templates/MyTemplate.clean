#!/bin/ksh
###############################################################################
#                   WRITE EC_EARTH OUTPUT ON HSM
###############################################################################
#   
# @ job_name         = JOBNAME
# @ class            = interactive
# @ partition        = hsm
# @ output           = LOGDIR/JOBNAME_%j.out
# @ error            = LOGDIR/JOBNAME_%j.err
## @ output           = /gpfs/scratch/ecm86/${USER}/LOGDIR/JOBNAME_%j.out
## @ error            = /gpfs/scratch/ecm86/${USER}/LOGDIR/JOBNAME_%j.err
# @ initialdir       = INITIALDIR
# @ features         = hsm
# @ total_tasks      = 1
# @ wall_clock_limit = 10:00:00
#
set -evx
date

Myexpid=EXPID
Mymember=MEMBER
START_date=SDATE
WRITINGDIR=/gpfs/scratch/ecm86/${USER}/${Myexpid}
RUN_dir=${WRITINGDIR}/${START_date}/fc${Mymember}

#
# Chunk management
#
chunk=CHUNK
Chunk_last=Chunk_LAST 

Chunk_start_date=Chunk_START_DATE
Chunk_end_date=Chunk_END_DATE

#in days
chunk_end_in_days=Chunk_End_IN_DAYS

# in hours

Chk_length=$(( ${chunk_end_in_days} * 24 )) # In hours
Chunk_length=`printf '%08d' ${Chk_length}`

#in month
RUN_chunk_size=Chunk_SIZE_MONTH
#
# Output path on HSM
#
PATHOUT="/HSM/ecm86/ecearth/${Myexpid}/${START_date}/fc${Mymember}"
if [[ ! -d ${PATHOUT} ]] ; then
   echo "HOUSTON we have a problem!"
   echo " this directory should already exist ! ${PATHOUT}"
   exit
fi

output_dir=${RUN_dir}/Output_${chunk}

if [[ -d ${RUN_dir} ]] ; then
   cd $RUN_dir
else
   exit
fi
###############################################################################
#                               SAVE RESTARTS
###############################################################################
 PATHOUT_RES="${PATHOUT}/restarts"

if [[ ! -d ${PATHOUT_RES} ]] ; then
   mkdir -p ${PATHOUT_RES}
fi

for REST in RESTA RESTO ; do
    case ${REST} in
         RESTA) PATHSU="/IFS_Restart_${chunk}"
                FILEPREF=""
         ;;
         RESTO) PATHSU="/NEMO_Restart_${chunk}"
#               PATHSU="/NEMO_Restart_${chunk}"
                FILEPREF="ORCA1_${Chunk_length}_restart"
         ;;
    esac
# 
    if [[ ! -a ${REST}_${chunk} ]] ; then
     Basedir="${RUN_dir}${PATHSU}"
     if [[ -d ${Basedir} ]] ; then
       ls -l ${Basedir}/${FILEPREF}*
     else
       exit 1
     fi
#
# Create and copy tar file
#
     tarfile="${REST}_${Myexpid}_${START_date}_fc${Mymember}_${Chunk_start_date}-${Chunk_end_date}.tar"
     tar -cvf $tarfile ${Basedir}/${FILEPREF}*
     cp $tarfile $PATHOUT_RES
#
# Check target file
#
     locfile=`md5sum ${tarfile}|cut -d" " -f1`
     remfile=`md5sum ${PATHOUT_RES}/${tarfile}|cut -d" " -f1`
#    rm -f ${RUN_dir}/rest_${chunk}
     if [[ "$locfile" == "$remfile" ]] ; then
       echo "The file has been correctly stored"
       touch ${RUN_dir}/${REST}_${chunk}
       rm -f $tarfile
     else
       exit 1
     fi
     date
    fi
done

if [[ -a RESTA_${chunk} && -a RESTO_${chunk} ]] ; then
touch ${RUN_dir}/rest_${chunk}
fi



if [[ -d ${output_dir} ]] ; then
   cd $output_dir
else
   exit
fi

PATHOUT_OUT="${PATHOUT}/outputs"
if [[ ! -d ${PATHOUT_OUT} ]] ; then
   mkdir -p ${PATHOUT_OUT}
fi   
#############################################
#
########### Save Ocean files ################
#
#############################################


tarfile="MMO_${Myexpid}_${START_date}_fc${Mymember}_${Chunk_start_date}-${Chunk_end_date}.tar"
touch ../$tarfile
#
# Copying the monthly means
#
prefix=ORCA1_MM_${Chunk_start_date}_${Chunk_end_date}
grid_types="grid_W grid_T grid_U grid_V icemod"
for grid_type in ${grid_types}; do
    output_file=${prefix}_${grid_type}.nc.gz
    tar -rvf ../${tarfile} ${output_file}
done
cp ../$tarfile $PATHOUT_OUT
#
rm -f ${RUN_dir}/outo_${chunk}
locfile=`md5sum ../${tarfile}|cut -d" " -f1`
remfile=`md5sum ${PATHOUT_OUT}/${tarfile}|cut -d" " -f1`
if [[ "$locfile" == "$remfile" ]] ; then
   echo "The file has been correctly stored"
   touch ${RUN_dir}/outo_${chunk}
   rm -f ../$tarfile
else
   exit 1
fi

date


#############################################
#
########### Save Atmospheric files ##########
#
#############################################

tarfile="MMA_${Myexpid}_${START_date}_fc${Mymember}_${Chunk_start_date}-${Chunk_end_date}.tar"
#
# Copying the monthly means (atmospheric daily data are in GRIB files)
#
tar -cvf ../$tarfile MMA_${Myexpid}_*.nc.gz
cp ../$tarfile $PATHOUT_OUT
#
rm -f ${RUN_dir}/outa_${chunk}
locfile=`md5sum ../${tarfile}|cut -d" " -f1`
remfile=`md5sum ${PATHOUT_OUT}/${tarfile}|cut -d" " -f1`
if [[ "$locfile" == "$remfile" ]] ; then
   echo "The file has been correctly stored"
   touch ${RUN_dir}/outa_${chunk}
   rm -f ../$tarfile
else
   exit 1
fi
date
cd $RUN_dir

if [[ -a outo_$chunk && -a outa_$chunk ]] ; then
	echo "We are now removing ${output_dir}"
        rm -rf ${output_dir}
fi

if [[ -a rest_$((chunk-1)) ]] ; then
	echo "We are now removing IFS_Restart_$((chunk-1))"
        rm -rf IFS_Restart_$((chunk-1))
fi




find ${PATHOUT}/. -type d | xargs chmod 775 
find ${PATHOUT}/. -type f | xargs chmod 664 

clast=Chunk_LAST
if [[ "$clast" == ".TRUE." ]] ; then
    cd $WRITINDIR
    echo "We are now removing ${RUN_dir}"
    rm -rf ${RUN_dir}
    touch dir_${Myexpid}_${Start_date}_fc{Mymember}.REMOVED
    touch /gpfs/projects/ecm86/common/db/logs/${Myexpid}/${Myexpid}_${Start_date}_fc{Mymember}_READY
fi

touch LOGDIR/JOBNAME_COMPLETED
