set -exuv
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
ECEARTH_DIR=%MODELS_DIR%/%MODEL%
PATH=%CDOPATH%:${PATH}
PATH=%NCOPATH%:${PATH}
PATH=%CDFPATH%:${PATH}
PATH=%GRIBAPIPATH2%:${PATH}
PATH=%REBUILDPATH%:${PATH}

CON_FILES=${ECEARTH_DIR}/%VERSION%/inidata/nemo/%NEMO_resolution%
#
# Model Configuration
#
VERSION=%VERSION%
NEMOVERSION=v3.3
EXPID=%EXPID%
MEMBER=%MEMBER%
START_date=%SDATE%
WRITINGDIR=${SCRATCH_DIR}/%HPCUSER%/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}
SAVEDDO=%SAVEDDO%

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
Chunk_last=%Chunk_LAST%
# In months
RUN_months=%CHUNKSIZE%
# In days
RUN_days=%RUN_DAYS%
# In hours
RUN_hours=$((RUN_days*24))

#
###############################################################################
#                   Include ocean post processing functions                   #
###############################################################################
#
# Model output path w.r.t chunk number
#
output_dir=${RUN_dir}/Output_${chunk}
tmp_output_dir=%SCRATCH_TMP_DIR%/%HPCUSER%/%JOBNAME%
find ${output_dir}/. -type d | xargs chmod 775 2>/dev/null
find ${output_dir}/. -type f | xargs chmod 664 2>/dev/null

if [[ -d ${output_dir} ]]; then
   # mkdir -p $tmp_output_dir
   cd $output_dir
else
   exit
fi

%INCLUDE_POSTP%

#
# Rebuild ocean output
#
date
if [[ ! -a %JOBNAME%.opost ]]; then
   intervals=`ls -1 ${EXPID}_??_${Chunk_start_date}_${Chunk_end_date}_??????_0000.nc | cut -d '_' -f 2 | uniq`
   for interval in ${intervals}; do
       grid_types=`ls -1 ${EXPID}_${interval}_${Chunk_start_date}_${Chunk_end_date}_??????_0000.nc | cut -c 27-32`
       prefix=${EXPID}_${interval}_${Chunk_start_date}_${Chunk_end_date}
        for grid_type in ${grid_types}; do
           output_file=${prefix}_${grid_type}.nc
           rebuild -v 3 -o ${output_file} ${prefix}_${grid_type}_[0-9][0-9][0-9][0-9].nc
           rm -f ${prefix}_${grid_type}_[0-9][0-9][0-9][0-9].nc
       done
   done
#
# Select a reduced set of outputs to save
#
   if [[ %OCEAN_REDUCOUT% == 'TRUE' ]] ; then
     #
     # A prerequisite to enter the common diagnostic post-processing
     if [[ -e toto.nc ]] ; then rm -f toto.nc ; fi 
     cdo mergetime ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc toto.nc
     #
     # Mixed layer ocean heat content : somxlheatc
     heat_sal_mxl toto.nc heat_sal_mxl_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc
     ncrename -d time,time_counter heat_sal_mxl_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc
     ncks -A -v somxlheatc heat_sal_mxl_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc
     rm -f heat_sal_mxl_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc
     #
     # 0-300m ocean heat content : heatc_sl
     ohc_specified_layer toto.nc 0.0 300.0 ohc_2d_avg_0-300m_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc
     ncrename -d time,time_counter ohc_2d_avg_0-300m_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc
     ncks -A -v heatc_sl ohc_2d_avg_0-300m_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc
     rm -f ohc_2d_avg_0-300m_${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}.nc toto.nc
     ncks -O -x -v sohtc300 ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc
     #
     # Select only the necessary outputs : surface currents only and remove 3d temperature
     ncks -O -d depthv,0 -d depthu,0 ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc
     ncrename -v vozocrtx,sozocrtx -v vomecrty,somecrty ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc
     ncks -O -x -v votemper ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc ${EXPID}_1d_${Chunk_start_date}_${Chunk_end_date}_grid_T.nc
   fi
   gzip -9 *${EXPID}*.nc

   touch %JOBNAME%.opost
fi
#
# Compute atmospheric monthly means
#
ATM_rstdate=%ATM_rstdate%
if [[ $ATM_rstdate == '' ]]; then
   ATM_rstdate=${START_date}
fi
nmonthini=`echo $ATM_rstdate | cut -c5-6`
nyearini=`echo $ATM_rstdate | cut -c1-4`

if [[ ! -a %JOBNAME%.apost ]]; then
 nmon=1
 year=${nyearini}
 while [[ $nmon -le $RUN_months ]]; do
       date
       nmonthini=${nmonthini#0}
       month=$((nmonthini+(chunk-1)*RUN_months+nmon-1))
       year=$((nyearini+((month-1)/12)))
       month=$((month-((month-1)/12)*12))
       month=`printf '%02d' ${month}`
       types="SH GG"
       for type in $types; do
           prefix=ICM${type}${EXPID}
           file=${prefix}+${year}${month}
           if [[ ! -a ${file}.grb ]]; then
              # cp ${file} $tmp_output_dir
              # cd $tmp_output_dir
              cp ${file} ${file}.tmp
              case $type in
               SH) PARS=`grib_ls -m ${file} | head -n -3 | tr -s ' ' | cut -f7 -d ' ' | sort -n | uniq | grep ^[0-9]`;; # tested with grib_api
               GG) PARS=`grib_ls -m ${file} | head -n -3 | tr -s ' ' | cut -f6 -d ' ' | sort -n | uniq | grep ^[0-9]`;; # version 1.9.9
              esac
              for PAR in $PARS; do
                  if [[ $PAR == 133.128 || $PAR == 152.128 || $PAR == 246.128 || \
                        $PAR == 247.128 || $PAR == 248.128 ]]; then
                     rm -f ${PAR}.grb
                     grib_copy -w param=${PAR} ${file}.tmp ${PAR}.grb
                     if [[ $PAR == 152.128 ]]; then
                        rm -f ${PAR}.grb
                     fi
                     mv ${file}.tmp ${file}.tmp2
                     grib_copy -w param!=${PAR} ${file}.tmp2 ${file}.tmp
                 fi
              done
              PARS="133.128 246.128 247.128 248.128"
              for PAR in $PARS; do
                  if [[ -a ${PAR}.grb ]]; then
                     cdo -R -r -t ecmwf -f nc splitvar ${PAR}.grb ${file}_
                     rm -f ${PAR}.grb
                  fi
              done
              cdo -R -r -t ecmwf -f nc splitvar ${file}.tmp ${file}_
              ls -l ${file}_*.nc
              rm -f ${file}.tmp ${file}.tmp2
              #
              date
              for infile in `ls ${file}_*.nc`; do
                  name=`basename $infile .nc`
                  quant=`echo $name | sed s/${prefix}+${year}${month}_//`
                  outfile=IM_${quant}_${year}${month}
                  # Needed because last timestep is the 00:00 hours of the next day of the month
                  cdo -f nc -r -timmean ${prefix}+${year}${month}_${quant}.nc ${outfile}_mm.nc
                  mv ${outfile}_mm.nc ${outfile}_mm.nc.tmp
                  # Shift the time to the correct month
                  cdo shifttime,-1month ${outfile}_mm.nc.tmp ${outfile}_mm.nc
                  rm -f ${prefix}+${year}${month}_${quant}.nc
              done
              cdo -f nc -r -merge IM_*_${year}${month}_mm.nc MMA_${EXPID}_${type}_${year}${month}.nc
              gzip -9 MMA_${EXPID}_${type}_${year}${month}.nc
              rm -f IM_*_${year}${month}_mm.nc
              # mv ${file} ${output_dir}/${file}.grb
              # mv MMA_* ${output_dir}
              # cd ${output_dir}
              # rm ${file}
              mv ${file} ${file}.grb # extra line
           fi
       done
       nmon=$((nmon+1))
 done

 touch %JOBNAME%.apost
fi

if [[ -a %JOBNAME%.opost && -a %JOBNAME%.apost ]]; then
   # rm -rf $tmp_output_dir
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED
fi

date

