set -exuv
date

#
# Basic Definitions
#

VERSION=%VERSION%
MEMBER=%MEMBER%
EXPID=%EXPID%
START_date=%SDATE%
case $VERSION in
     v2.1) ECEARTH=/gpfs/projects/ecm86/ecm86503/ecearth2.1
           SCRIPTDIR=/gpfs/projects/ecm86/ecearth/V2.1/setup
           TESTDATADIR=/gpfs/projects/ecm86/ecearth/V2.1/inidata
     ;;
     v2.2.0) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.0
           SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.0/setup
           TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.0/inidata
     ;;
     v2.2.1) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.1
             SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.1/setup
             TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.1/inidata
     ;;
     v2.2.2) ECEARTH=/gpfs/projects/ecm86/ecearth/v2.2.2
             SCRIPTDIR=/gpfs/projects/ecm86/ecearth/v2.2.2/setup
             TESTDATADIR=/gpfs/projects/ecm86/ecearth/v2.2.2/inidata
esac

#
# Model Configuration
#
PATH=${SCRIPTDIR}:${PATH}
SCRATCH_dir=/gpfs/scratch/ecm86/
WRITINGDIR=${SCRATCH_dir}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}

mkdir -p $RUN_dir
cd $RUN_dir
INIPATH=${RUN_dir}/inidata

#
# IFS
#
IFS_resolution=%IFS_resolution%
IFS_nproc=%IFS_nproc%
NPROMA=%NPROMA%
LFASTRES=%LFASTRES%
IFSDIR=${ECEARTH}
IFS_exe=${IFSDIR}/bin/ifsMASTER

#
# NEMO 
#
NEMO_resolution=%NEMO_resolution%
NEMO_config=`echo ${NEMO_resolution} | tr [a-z] [A-Z]`
NEMO_nprocX=%NEMO_nprocX%
NEMO_nprocY=%NEMO_nprocY%
NEMO_nproc=$((NEMO_nprocX*NEMO_nprocY))
NEMO_exe=${ECEARTH}/bin/opa_exe.${NEMO_config}_OASIS3.${NEMO_nprocX}.${NEMO_nprocY}

#
# OASIS
#
OASIS3_oldWeights=true
OASIS3_weightsDir=${TESTDATADIR}/oasis3/weights/big_endian/${IFS_resolution}_${NEMO_resolution}
OASIS3_exe=${ECEARTH}/bin/oasis3.MPI1.x
WAM=%WAM%
#
export OASIS3=%OASIS3%
export OASIS3DEBUGLEVEL=%OASIS3DEBUGLEVEL%
export DR_HOOK_IGNORE_SIGNALS=%DR_HOOK_IGNORE_SIGNALS%
#export MPI_NAP=5
ulimit -c 1000000
export LOCAL_DEFINITION_TEMPLATES=${ECEARTH}/sources/ifs/src/emos/local_definitions
export MBX_SIZE=%MBX_SIZE%

RUN_coupFreq=%RUN_coupFreq%

NFRP=%NFRP% # Frequency of postprocessing in hours
ADVSCH=%ADVSCH% # Ocean advection scheme

##########
#Here we assume all initial conditions has been copied or linked to the RUN_dir
#############


#
# Chunk management
#
chunk=%CHUNK%
day_prev=%PREV%

#in days
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
RUN_days=%RUN_DAYS%
# in hours
Chunk_length=$(( ${RUN_days} * 24 )) # In hours
Chunk_last_day_prev=$(( ${day_prev} * 24 )) # In hours
Chunk_last=%Chunk_LAST%

# Run Directory Initialization
# 
if [[ $chunk == 1 ]]; then
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_*.nc ${RUN_dir}/mask*.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "FIRST Chunk"
 echo "Chunk_length: ${Chunk_length}"
 LFASTRES=.FALSE.
else
 rm -f ${RUN_dir}/anaisout
 rm -f ${RUN_dir}/mesh_zgr.nc ${RUN_dir}/mesh_hgr.nc ${RUN_dir}/mask.nc ${RUN_dir}/damping.coeff_[0-9][0-9][0-9][0-9].nc
 echo "Chunk: ${chunk}"
 echo "Chunk_length: ${Chunk_length}"
 LFASTRES=.TRUE.
fi

CMIP5=%CMIP5%
LCMIP5=%LCMIP5%
Nrcp=%Nrcp%
RCP=%RCP%
if [[ $CMIP5 = .TRUE. ]] ; then
   LCMIP5=true
   NFRP=3 # Frequency of postprocessing in hours
   RUN_coupFreq=3 # Becomes NFRCO
   WAM=false
   ADVSCH=tvd # Ocean advection scheme
   if [[ $RCP = 3-PD ]] ; then
      Nrcp=1
   fi
   if [[ $RCP = 4.5 ]] ; then
      Nrcp=2
   fi
   if [[ $RCP = 6.0 ]] ; then
      Nrcp=3
   fi
   if [[ $RCP = 8.5 ]] ; then
      Nrcp=4
   fi
fi

#
# Control the use of the scenario
#
    if [[ Lrcp == TRUE ]] ; then
       CNrcp=$Nrcp
    else
       CNrcp=0
    fi
#

if [[ ! -a finished_chunk_${chunk} ]] ; then

 case $VERSION in
     v2.1) EXPVER=$(${SCRIPTDIR}/setupifs_${VERSION}.ksh -r ${IFS_resolution} -e ${ECEARTH} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -o ${Chunk_last} -1 ${TESTDATADIR} -2 ${EXPID})
     ;;
     v2.2.0) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p $NPROMA -o ${Chunk_last} -0 ${TESTDATADIR} -2 ${EXPID} -3 $LFASTRES)
     ;;
     v2.2.1) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p $NPROMA -o ${Chunk_last} -0 ${TESTDATADIR} -2 ${EXPID} -3 $LFASTRES -4 $NFRP)
     ;;
#    v2.2.2) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o ${Chunk_last} -0 ${TESTDATADIR} -2 ${EXPID} -3 ${LFASTRES} -4 ${NFRP} -5 ${LCMIP5} -6 ${CNrcp} -7 ${LHVOLCA})
     v2.2.2) EXPVER=$(${SCRIPTDIR}/setupifs.ksh -r ${IFS_resolution} -e ${ECEARTH} -d ${Chunk_last_day_prev} -l $((Chunk_last_day_prev+Chunk_length)) -n ${IFS_nproc} -w ${WAM} -c ${RUN_coupFreq} -p ${NPROMA} -o ${Chunk_last} -0 ${TESTDATADIR} -2 ${EXPID} -3 ${LFASTRES} -4 ${NFRP} -5 ${LCMIP5} -6 ${CNrcp})
     ;;
 esac

 if [[ ${OASIS3_oldWeights} == false ]]; then
  ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -0 ${TESTDATADIR}
 else
  ${SCRIPTDIR}/setupoasis3.ksh -r ${IFS_resolution} -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -n ${IFS_nproc} -p ${NEMO_nproc} -c ${RUN_coupFreq} -w -W ${OASIS3_weightsDir} -0 ${TESTDATADIR}
 fi
#
 if [[ $VERSION = v2.2.2 || $VERSION = v2.2.1 || $VERSION = v2.2.0 ]] ; then
       if [[ ${Chunk_last_day_prev} != '0' ]]; then
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH}
       else
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${Chunk_length} -0 ${TESTDATADIR} -1 ${START_date} -2 ${ADVSCH}
       fi
 else
       if [[ ${Chunk_last_day_prev} != '0' ]]; then
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l $((Chunk_length+Chunk_last_day_prev)) -p ${Chunk_last_day_prev} -0 ${TESTDATADIR} -1 ${START_date}
       else
          setupnemo.ksh -g ${NEMO_config} -e ${ECEARTH} -l ${CHunk_length} -0 ${TESTDATADIR} -1 ${START_date}
       fi
    fi

 if [[ $chunk == 1 ]]; then
  rm -f rcf
  rm -f *f00000000*
  rm -f postins 
  rm -f dirlist
  rm -f ICM*
  ln -sf ${INIPATH}/* .
 fi

 ls -l
#
# Location of the executables
# 
 IFS_exe="${IFS_exe}"
 NEMO_exe="${NEMO_exe}"
 OASIS3_exe="${OASIS3_exe}"
#
# Model Run
#
 echo "0 ${OASIS3_exe}" > silly.conf
 echo "1-$IFS_nproc ${IFS_exe} -v ecmwf -e $EXPVER" >> silly.conf
 echo "29-44 ${NEMO_exe}" >> silly.conf
 date
#
# set +e is required because there are random errors at the end
# of each chunk
#
 set +e
 time srun -n 45 -l --multi-prog silly.conf
 set -e
 echo "finished chunk"
 date
fi

#
# Copy the ocean restarts to a directory.
# If not the first chunk, the restarts of the previous chunk are removed from the two places
# where they are kept and they are also removed from the NEMO_restart_* directory if the HSM
# job has been successful.
#
mkdir -p NEMO_Restart_$chunk
ldp=`printf '%08d' $((Chunk_last_day_prev+Chunk_length))`
cp ORCA1_${ldp}_restart*nc NEMO_Restart_$chunk/. 2>/dev/null
if [[ $chunk > 1 ]] ; then
   ldp=`printf '%08d' ${Chunk_last_day_prev}`
   rm -f ORCA1_${ldp}_restart*nc
   rm -f ORCA1_Restart/*
   if [[ -a ${RUN_dir}/rest_$((chunk-1)) ]] ; then
      rm -rf ${RUN_dir}/NEMO_Restart_$((chunk-1))
   fi
fi

#
# Save IFS restart files and prepare for continuation of the run
#

Chunk_end=$((Chunk_length+Chunk_last_day_prev))
Chunk_restart_tag=`printf "%06d0000" $(( ${Chunk_last_day_prev}/24+${Chunk_length}/24 ))`

if [[ `ls -1 guarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9]` = '0' ]]; then
 echo "EC-Earth RUN FAILED"
 exit 1
fi

Chunk_last_day_prev=$((${Chunk_last_day_prev} + ${Chunk_length}))
echo "Chunk_last_day_prev: ${Chunk_last_day_prev}"

mkdir -p IFS_Restart_${chunk}
mv guarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] gxtrarf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] \
srf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] surf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] \
 tmrf${Chunk_restart_tag}.[0-9][0-9][0-9][0-9] IFS_Restart_${chunk}
ln -sf IFS_Restart_${chunk}/* .
cp rcf IFS_Restart_${chunk}

#  
# Move the output for postprocessing
#

output_dir="Output_${chunk}"
mkdir -p ${output_dir}
mv ICMGG${EXPID}+* ICMSH${EXPID}+* ORCA1_MM_*.nc ${output_dir}/.

chmod 775 -R ${RUN_dir}/

touch %LOGDIR%/%JOBNAME%_COMPLETED
