set -evx
date

#
# General Paths
#
SCRATCH_DIR=%SCRATCH_DIR%
HSMdir=%HSM_DIR%
DBdir=%DB_DIR%
USER=%HPCUSER%

#
# Model Configuration
#
EXPID=%EXPID%
MEMBER=%MEMBER%
START_date=%SDATE%
WRITINGDIR=${SCRATCH_DIR}/${USER}/${EXPID}
RUN_dir=${WRITINGDIR}/${START_date}/${MEMBER}
SAVEDDO=%SAVEDDO%

#
# Chunk Management
#
chunk=%CHUNK%
Chunk_start_date=%Chunk_START_DATE%
Chunk_end_date=%Chunk_END_DATE%
Chunk_last=%Chunk_LAST%
# in days
Chunk_end_in_days=%Chunk_End_IN_DAYS%
# in hours
Chk_length=$(( ${Chunk_end_in_days} * 24 ))
Chunk_length=`printf '%08d' ${Chk_length}`
# in months
RUN_chunk_size=%CHUNKSIZE%

#
# Output Path on HSM (permanent storage)
#
PATHOUT="${HSMdir}/exp/${EXPID}/${START_date}/${MEMBER}"
if [[ ! -d ${PATHOUT} ]]; then
   echo "HOUSTON we have a problem!"
   echo " this directory should already exist! ${PATHOUT}"
   exit
fi

output_dir=${RUN_dir}/Output_${chunk}

if [[ -d ${RUN_dir} ]]; then
   cd $RUN_dir
else
   exit
fi

#
# Save NEMO & IFS restart files at permanent storage and clean disk
#
PATHOUT_RES="${PATHOUT}/restarts"

if [[ ! -d ${PATHOUT_RES} ]]; then
   mkdir -p ${PATHOUT_RES}
fi

for REST in RESTA RESTO ; do
    case ${REST} in
         RESTA) PATHSU="/IFS_Restart_${chunk}"
                FILEPREF=""
         ;;
         RESTO) PATHSU="/NEMO_Restart_${chunk}"
                FILEPREF="${EXPID}_${Chunk_length}_restart"
         ;;
    esac
# 
    if [[ ! -a ${REST}_${chunk} ]]; then
       Basedir="${RUN_dir}${PATHSU}"
       if [[ -d ${Basedir} ]]; then
          ls -l ${Basedir}/${FILEPREF}*
       else
          exit 1
       fi

       # Create and copy tar file
       tarfile="${REST}_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"
       tar -cvf $tarfile ${Basedir}/${FILEPREF}*
       cp $tarfile $PATHOUT_RES

       # Check target file
       locfile=`md5sum ${tarfile}|cut -d" " -f1`
       remfile=`md5sum ${PATHOUT_RES}/${tarfile}|cut -d" " -f1`
       if [[ "$locfile" == "$remfile" ]] ; then
          echo "${tarfile} file has been stored correctly"
          touch ${RUN_dir}/${REST}_${chunk}
          rm -f $tarfile
       else
          exit 1
       fi
     date
    fi
done

if [[ -a RESTA_${chunk} && -a RESTO_${chunk} ]] ; then
   rm ${RUN_dir}/RESTA_${chunk} ${RUN_dir}/RESTO_${chunk}
   touch ${RUN_dir}/rest_${chunk}
fi

if [[ -d ${output_dir} ]]; then
   cd $output_dir
else
   exit
fi

#
# Save NEMO & IFS output files at permanent storage and clean disk
#
PATHOUT_OUT="${PATHOUT}/outputs"

if [[ ! -d ${PATHOUT_OUT} ]]; then
   mkdir -p ${PATHOUT_OUT}
fi   

#
# Save Ocean files
#
tarfile="MMO_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"
touch ../$tarfile

# Copying the monthly means
case ${SAVEDDO} in
 'TRUE') 
  interval=1d 
  grid_types="grid_T"
  #grid_types="grid_W grid_T grid_U grid_V icemod" for 5d
 ;;
 'FALSE')
  interval=1m
  grid_types="grid_T"
 ;;
esac
prefix=${EXPID}_${interval}_${Chunk_start_date}_${Chunk_end_date}
for grid_type in ${grid_types}; do
    output_file=${prefix}_${grid_type}.nc.gz
    tar -rvf ../${tarfile} ${output_file}
done
cp ../$tarfile $PATHOUT_OUT
#
rm -f ${RUN_dir}/outo_${chunk}
locfile=`md5sum ../${tarfile}|cut -d" " -f1`
remfile=`md5sum ${PATHOUT_OUT}/${tarfile}|cut -d" " -f1`
if [[ "$locfile" == "$remfile" ]]; then
   echo "${tarfile} file has been stored correctly"
   touch ${RUN_dir}/outo_${chunk}
   rm -f ../$tarfile
else
   exit 1
fi

date

#
# Save Atmospheric files
#
tarfile="MMA_${EXPID}_${START_date}_${MEMBER}_${Chunk_start_date}-${Chunk_end_date}.tar"

# Copying the monthly means
tar -cvf ../$tarfile MMA_${EXPID}_*.nc.gz
cp ../$tarfile $PATHOUT_OUT
#
rm -f ${RUN_dir}/outa_${chunk}
locfile=`md5sum ../${tarfile}|cut -d" " -f1`
remfile=`md5sum ${PATHOUT_OUT}/${tarfile}|cut -d" " -f1`
if [[ "$locfile" == "$remfile" ]] ; then
   echo "${tarfile} file has been stored correctly"
   touch ${RUN_dir}/outa_${chunk}
   rm -f ../$tarfile
else
   exit 1
fi
date

# Copying the daily data (GRIB files)
SAVEDD=%SAVEDD%
if [[ $SAVEDD == TRUE ]]; then
   for FILE in `ls ICM*grb` ; do
       cp $FILE ${PATHOUT_OUT}/.
       chmod 775 ${PATHOUT_OUT}/*
#
       locfile=`md5sum ${FILE}|cut -d" " -f1`
       remfile=`md5sum ${PATHOUT_OUT}/${FILE}|cut -d" " -f1`
       if [[ "$locfile" == "$remfile" ]]; then
          echo "${FILE} has been stored correctly"
       else
          rm -f ${RUN_dir}/outa_${chunk}
          exit 1
       fi
   done
fi

#
# Tail of the chunk
#
cd $RUN_dir

if [[ -a outo_$chunk && -a outa_$chunk ]]; then
   echo "Delete ${output_dir}"
   rm -rf ${output_dir} outo_$chunk outa_$chunk
   touch out_$chunk
fi

find ${PATHOUT}/. -type d | xargs chmod 775 2>/dev/null
find ${PATHOUT}/. -type f | xargs chmod 664 2>/dev/null

touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/%JOBNAME%_COMPLETED

date

#
# Tail of the experiment
#
if [[ $Chunk_last == TRUE && -a rest_$((chunk-1)) && -a out_$((chunk-1)) ]]; then

   echo "Delete ${RUN_dir}"
   cd $WRITINGDIR
   rm -rf ${RUN_dir}
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/dir_${EXPID}_${START_date}_${MEMBER}_REMOVED
   touch %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%/exp_${EXPID}_${START_date}_${MEMBER}_READY

   echo "Save Log files at permanent storage"
   cd %SCRATCH_DIR%/%HPCUSER%/%EXPID%/LOG_%EXPID%
   tarfile="logfiles_${EXPID}_${START_date}_${MEMBER}.tar"
   tar -cvf $PATHOUT/$tarfile *${EXPID}_${START_date}_${MEMBER}*

fi

